dvc_dir   = dvc

# Where do we pick up .el files which don't have their own Makefiles?
el_search_paths = 			\
	init/common 			\
	$(wildcard major-modes/*.el) 	\
	major-modes/mmm 		\
	major-modes/pcl-cvs 		\
	major-modes/remember 		\
	major-modes/pgg 		\
	minor-modes 			\
	utils 				\
	fun

elc_overrides = org.elc pcvs*.elc

# These ones have their own Makefiles
THIRD_PARTY_PKGS = 		\
	psgml 			\
	muse 			\
	dvc

# Don't automatically compile *.el in these directories:
THIRD_PARTY_PKG_DIRS = $(addprefix major-modes/, 	\
	psgml 						\
	muse 						\
	$(dvc_dir) 					\
	)

# Pretend these don't exist at all.
IGNORE_PATHS = 					\
	minor-modes/msf-abbrev/mode-abbrevs 	\
	major-modes/monkey-2
IGNORE_FILES =		    \
	major-modes/sdf.el  \
	major-modes/mediawiki.el

# Phony targets are bad except for top-level rules because if a rule A
# has a phony prerequisite B, that phony rule B will always get
# executed, even if B's prerequisites don't need to be, hence the
# parent rule will too.

EMACSLIB = $(HOME)/lib/emacs

gnuinstall_dir = $(EMACSLIB)/GNU_Emacs
xinstall_dir = $(EMACSLIB)/XEmacs

prefix   = $(HOME)/local
info_dir = $(prefix)/share/info
lisp_dir = $(prefix)/share/emacs/site-lisp

# Figure out which .els to compile ourselves.  The list should comprise of
# everything we can find which we're not completely ignoring, but excluding
# stuff generated by third-party Makefiles.

# Horrible horrible horrible.  Prune 3rd party packages from imminent find(1).
prune_dirs = $(shell echo $(THIRD_PARTY_PKG_DIRS) $(IGNORE_PATHS) | perl -040lpe 's|(.+)|! -path "$$1/*" |g')
prune_files = $(shell echo $(THIRD_PARTY_PKG_DIRS) $(IGNORE_FILES) | perl -040lpe 's|(.+)|! -path "$$1" |g')

# We exclude as-init.el here because it has to be compiled after everything else.
ELs_TO_COMPILE_cmd =   				        \
	find $(el_search_paths)				\
	        -follow					\
		-name \*.el 				\
	      $(prune_dirs)				\
	      $(prune_files)				\
	      ! -name as-init.el			\
	      ! -name remember-bbdb.el 			\
	      ! -name remember-bibl.el 			\
	      ! -name remember-blosxom.el 		\
	      ! -name remember-emacs-wiki-journal.el 	\
	      ! -path '*/attic/*'			\
	      ! -path '*/shimbun/*'
ELs_TO_COMPILE = $(shell $(ELs_TO_COMPILE_cmd)) 

# These are the .elcs we want to build ourselves
ELCs_TO_COMPILE = $(addsuffix c,$(ELs_TO_COMPILE))

# Do a separate search for elcs since we want to include ones which were
# built from vendor Makefiles.
THIRD_PARTY_ELCs = $(shell \
	find $(THIRD_PARTY_PKG_DIRS) -name \*.elc \
)
AS_INIT_EL  = init/common/as-init.el
AS_INIT_ELC = init/common/as-init.elc

ifndef EMACS
  EMACS=emacs
endif

version=$(shell $(EMACS) --version)
version_number=$(shell echo "$(version)" | \
                   perl -ne '/^\s*(GNU |X)Emacs (\d+\.\d+)/ && print "$$2"')
system_type=$(shell $(EMACS) -q --batch \
	--eval '(message (format "%s" system-type))' 2>&1 | grep -v '^Loading ')

site_install_dir=$(shell $(EMACS) -q --batch \
	--eval '(princ (car load-path))')

ifeq (, $(findstring XEmacs,$(version)))
  # GNU Emacs
  # Really ugly hack to add all subdirs of lisp_dir to the load-path.
  EMACS_LOADPATHS=$(EMACS) \
	$(addprefix -L ,$(loadpaths)) 				\
	--eval "(let ((orig-dir default-directory)) 		\
		   (cd \"$(lisp_dir)\") 			\
		   (normal-top-level-add-subdirs-to-load-path) 	\
		   (cd orig-dir))"				\

#	--eval "(message (princ-list load-path))" \
#	--eval "(normal-top-level-add-to-load-path '(\"$(lisp_dir)\"))" \

  install_dir=$(gnuinstall_dir)/$(version_number)/$(system_type)
else
  # X Emacs.  Blegh!
  LOADPATHS=$(addsuffix \" ,$(addprefix \",$(loadpaths)))
  EMACS_LOADPATHS=$(EMACS) \
	--eval "(setq load-path (append '($(LOADPATHS)) load-path))"
  install_dir=$(xinstall_dir)/$(version_number)/$(system_type)
endif

pre_install_dir  = $(install_dir)/pre
post_install_dir = $(install_dir)/post

COMPILER_PRE=$(EMACS_LOADPATHS) -batch --no-site-file
COMPILER_POST=-f batch-byte-compile

.PHONY: all install clean uninstall

all: .elcs install

show-compiler:
	@echo '$(COMPILER_PRE)'
	@echo '$(COMPILER_POST)'

list-loadpaths:
	@echo "$(loadpaths)"

list-prune:
	@echo "$(prune)"

list-els-to-compile-cmd:
	@echo "$(ELs_TO_COMPILE_cmd)"

list-els-to-compile:
	@for el in $(ELs_TO_COMPILE); do echo $$el; done

list-third-party-pkg-dirs:
	@for elc in $(THIRD_PARTY_PKG_DIRS); do echo $$elc; done

list-third-party-elcs:
	@for elc in $(THIRD_PARTY_ELCs); do echo $$elc; done

.elcs: $(ELCs_TO_COMPILE) $(THIRD_PARTY_PKGS) Makefile $(AS_INIT_ELC)
	@touch $@

$(pre_install_dir) $(post_install_dir):
	@[ -d $@ ] || mkdir -p $@

install: .installed 

# N.B. Must install .el files as well as .elc files so that
# find-function-source-path doesn't need to be extended excessively.
.installed: Makefile .elcs $(pre_install_dir) $(post_install_dir) #uninstall
	@echo "Installing .el and .elc files in $(post_install_dir)"
	@for file in $(ELs_TO_COMPILE) $(ELCs_TO_COMPILE) $(THIRD_PARTY_ELCs) 	\
		     $(AS_INIT_ELC); do 					\
	  cp $$file $(post_install_dir); 					\
	done
	@echo "Installing overrides in $(pre_install_dir)"
	cd $(post_install_dir) && \
	mv $(elc_overrides) $(pre_install_dir)
	@touch $@


# Some shitty Solaris makes have broken $(wildcard foo/*.bar)
clean: uninstall
	@-find $(EMACSLIB) -name \*.elc -print | xargs rm -f
	rm -f .*-made
	for dir in $(THIRD_PARTY_PKG_DIRS); do \
		( cd $$dir && make clean )     \
	done

uninstall:
	-find $(pre_install_dir) $(post_install_dir) -name \*.elc -print | \
		xargs rm -f

#############################################################################

$(AS_INIT_ELC): $(AS_INIT_EL)
	@echo Compiling $< ...
	$(COMPILER_PRE) \
		-L major-modes \
		-L major-modes/mmm \
		-L minor-modes \
		$(COMPILER_POST) $<

major-modes/mmm/%.elc: major-modes/mmm/%.el
	@echo Compiling $< ...
	$(COMPILER_PRE) -L major-modes/mmm $(COMPILER_POST) $<

major-modes/remember/%.elc: major-modes/remember/%.el
	@echo Compiling $< ...
	$(COMPILER_PRE) -L major-modes/remember $(COMPILER_POST) $<

psgml: .psgml-made
.psgml-made:
	( cd major-modes/psgml && $(MAKE) ) && \
	touch $@

.nxml-mode-20041004-made: $(post_install_dir)
	( 					\
	  cd major-modes/nxml-mode-20041004 && 	\
	  $(MAKE) && 				\
	  cp rng-auto.el $(post_install_dir) 	\
	) && 					\
	touch $@

muse: .muse-installed

.muse-made: $(wildcard major-modes/muse/*.el) major-modes/muse/Makefile.defs
	( 								\
	  cd major-modes/muse && 					\
	  perl -pi -e 's!^(EMACS\s*=\s*).*!$$1$(EMACS)!; 		\
                       s!^(PREFIX\s*=\s*).*!$${1}$(prefix)!;		\
                       s!^(INFODIR\s*=\s*).*!$${1}$(info_dir)!'		\
	  	Makefile.defs && 					\
	  make lisp  							\
	) && 								\
	touch $@

.muse-installed: .muse-made
	( 								\
	  cd major-modes/muse;						\
	  make install-bin;						\
	  make install-info ||						\
	    echo "muse install-info failure ignored"			\
	) &&								\
	touch $@

.planner-installed: .planner-made
	-( 								\
	  cd major-modes/planner; 					\
	  make install							\
	) &&								\
	touch $@
# FIXME need separate targets
# 	  make install-lisp;						\
# 	  make install-info ||						\
# 	    echo "planner install-info failure ignored"			\

.planner-made: $(wildcard major-modes/planner/*.el) major-modes/planner/Makefile.defs .muse-installed
	( 								\
	  cd major-modes/planner && 					\
	  perl -pi -e 's!^(EMACS\s*=\s*).*!$$1$(EMACS_LOADPATHS)!;	\
                       s!^(PREFIX\s*=\s*).*!$${1}$(prefix)!;		\
                       s!^(INFODIR\s*=\s*).*!$${1}$(info_dir)!'		\
	  	Makefile.defs && 					\
	  make lisp    							\
	) && 								\
	touch $@

#major-modes/remember/remember-experimental.elc: .planner-made

.emacs-w3m-made:
	( 					\
	  cd major-modes/emacs-w3m-1.4.4    && 	\
	  ./configure --prefix=$(prefix)	\
		      --infodir=$(info_dir) && 	\
	  make				    && 	\
	  make install			    && 	\
	  cp w3m-load.el $(post_install_dir) 	\
	) && 					\
	touch $@

pgg: pgg-made
.pgg-made: major-modes/pgg/pgg.elc
	@cp major-modes/pgg/pgg.{el,elc} $(post_install_dir) && touch $@

dvc_build_dir=major-modes/$(dvc_dir)/++build
dvc: .dvc-installed
.dvc-configured: major-modes/$(dvc_dir)/configure
	@-( 								\
	  if which baz >/dev/null 2>&1; then 				\
	    with_arch=--with-arch=baz; 					\
	    echo "Found baz; using that in preference to tla";		\
	  else								\
	    with_arch= ; 	 					\
	  fi; 								\
	  [ -d $(dvc_build_dir) ] || mkdir $(dvc_build_dir);		\
	  cd $(dvc_build_dir) &&	 				\
	  ../configure 							\
	    --prefix=$(prefix)	 					\
	    --with-other-dirs=$(HOME)/lib/emacs/utils/tree-widget-2.0 	\
	    $$with_arch							\
	) && 								\
	touch $@

major-modes/$(dvc_dir)/configure: major-modes/$(dvc_dir)/configure.ac
	-cd major-modes/$(dvc_dir) && autoconf

.dvc-made: $(wildcard major-modes/$(dvc_dir)/*.el) $(wildcard major-modes/$(dvc_dir)/*/*.el) .dvc-configured
	-( 					\
	  cd major-modes/$(dvc_dir)/++build && 	\
	  make  				\
	) && 					\
	touch $@

.dvc-installed: .dvc-made
	-( 								\
	  cd major-modes/$(dvc_dir)/++build && 				\
	  make install &&						\
	  install-info --info-dir=$(info_dir) $(info_dir)/dvc.info	\
	) &&								\
	touch $@

##############################################################################

# This has to come last so that specific compilation patterns can override it.
%.elc: %.el
	@echo Compiling $< ...
	@$(COMPILER_PRE) $(COMPILER_POST) $<
