This is emacs-w3m.info, produced by makeinfo version 4.0b from
emacs-w3m.texi.

INFO-DIR-SECTION GNU Emacs Lisp
START-INFO-DIR-ENTRY
* Emacs-w3m: (emacs-w3m).  An Emacs interface to w3m
END-INFO-DIR-ENTRY

   This file documents emacs-w3m, an Emacs interface to w3m.

   Copyright (C) 2000, 2001, 2002, 2003, 2004, 2005 TSUCHIYA Masatoshi

   This edition is for emacs-w3m version 1.4.4.

   Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU General Public License, Version 2 or any
later version published by the Free Software Foundation.

   This document is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
General Public License for more details.

   You should have received a copy of the GNU General Public License
along with this document; if not, you can either send email to this
document's maintainer or write to: The Free Software Foundation, Inc.;
59 Temple Place, Suite 330; Boston, MA 02111-1307, USA.


File: emacs-w3m.info,  Node: General Variables,  Next: Image Variables,  Up: Customizable Variables

General variables
=================

`w3m-accept-languages'
     List of acceptable languages in descending order of priority.  The
     default value is set according to the `accept_language' entry of
     the `w3m' configuration file (normally `~/.w3m/config').

`w3m-add-referer'
     Rule of sending referers.  There are five choices as the valid
     values of this option.

       1. `nil': this means that emacs-w3m never send referers.

       2. `t': this means that emacs-w3m always send referers.

       3. `lambda': this means that emacs-w3m send referers only when
          both the current page and the target page are provided by the
          same server.

       4. a cons cell keeping two regular expressions: this means that
          emacs-w3m send referers when the url of the current page
          matches the first regular expression and does not match the
          second regular expression.  `Nil' for the regexp matches any
          url.

       5. a function: emacs-w3m send referers when this function which
          has two arguments, URL and REFERER, returns non-nil.

     If you're nervous about leaking private WEB browsing history
     information, set this option to `nil' or `lambda'.  If your
     computer belongs to a secret network, you may set a pair of
     regular expressions to inhibit sending referers which will
     disclose your private information, as follows:

          (setq w3m-add-referer
                '("\\`http:\"
                  . "\\`http://\\([^./]+\\.\\)*example\\.net/"))

`w3m-add-user-agent'
     Non-`nil' means add the User-Agent field to the request header.
     The value of `w3m-user-agent' is used for the field body.

`w3m-arrived-file'
     Name of the file to keep the arrived URLs database.

`w3m-auto-show'
     Non-`nil' means provide the ability to horizontally scroll the
     window.  Automatic horizontal scrolling happens when the point
     gets away from both ends of the window, but nothing occurs if
     `truncate-lines' is set to `nil'.

     This feature works with specific emacs-w3m code; usual
     `auto-hscroll-mode', `automatic-hscrolling', `auto-show-mode' or
     `hscroll-mode' will all be invalidated in emacs-w3m buffers.

`w3m-charset-coding-system-alist'
     Alist of MIME charsets and coding systems.  Both charsets and
     coding systems must be symbols.

`w3m-coding-system'
     Default coding system used to communicate with the `w3m' command.

`w3m-coding-system-priority-list'
     Coding systems in order of priority used for emacs-w3m sessions.

`w3m-command'
     Name of the executable file of the `w3m' command.  You normally
     don't have to specify the value, since emacs-w3m looks for the
     existing commands `w3m', `w3mmee' and `w3m-m17n' (in this order)
     in the `exec-path' directories in order if it is `nil' in the
     beginning.

     If you want to use the other `w3m' command, specify the value of
     this variable explicitly in the .emacs file or customize the value
     and save it.  In this case, you need to restart Emacs and
     emacs-w3m: there is currently no way to apply the changing of the
     `w3m' command to all the emacs-w3m programs safely after loading
     the `w3m.elc' module.

`w3m-command-arguments'
     List of the default arguments passed to the `w3m' command.  See
     also `w3m-command-arguments-alist'.

`w3m-command-arguments-alist'
     Alist of regexps matching urls and additional arguments passed to
     `w3m'.  A typical usage of this variable is to specify whether to
     use a proxy server for particular hosts.  The first match made
     will be used.  Here is an example of how to set this variable:

          (setq w3m-command-arguments-alist
                '(;; Don't use the proxy server to visit local web pages.
                  ("^http://\\([^/]*\\.\\)*your-company\\.com\\(/\\|$\\)"
                   "-no-proxy")
                  ;; Use the proxy server to visit any foreign urls.
                  (""
                   "-o" "http_proxy=http://proxy.your-company.com:8080/")))

     Here the first element matches any url where the scheme is `http'
     and the hostname is either `your-company.com' or a name ending with
     `.your-company.com'; the proxy server is not used for those hosts.
     If you are a regexp novice, you can use the `w3m-no-proxy-domains'
     variable instead.

`w3m-command-environment'
     Alist of environment variables for subprocesses to inherit.

`w3m-content-type-alist'
     Alist of file suffixes and content types.

`w3m-correct-charset-alist'
     Alist of MIME charsets; strange ones and standard ones.

`w3m-db-history-display-size'
     Maximum number of arrived URLs which are displayed per page.

`w3m-decoder-alist'
     Alist of encoding types, decoder commands, and arguments.

`w3m-default-coding-system'
     Default coding system used to encode url strings and post-data.

`w3m-default-content-type'
     Default value assumed as the content type of local files.

`w3m-default-save-directory'
     Default directory where downloaded files will be saved to.

`w3m-delete-duplicated-empty-lines'
     Non-`nil' means display two or more continuous empty lines into
     single.

`w3m-dirlist-cgi-program'
     Name of the CGI program to list a local directory.  If it is
     `nil', the dirlist.cgi module of the `w3m' command will be used.

`w3m-edit-function'
     Function used for editing local files.  It is used when the
     `w3m-edit-current-url' command or the `w3m-edit-this-url' command
     is invoked.

`w3m-edit-function-alist'
     Alist of functions used for editing pages.  This option is refered
     to decide which function shouled be used to edit a specified page,
     when either `w3m-edit-current-url' or `w3m-edit-this-url' is
     invoked.  When no suitable function is found from this alist,
     `w3m-edit-function' is used.

`w3m-encoding-type-alist'
     Alist of file suffixes and content encoding types.

`w3m-file-coding-system'
     Coding system used when writing configuration files.  This value
     will be referred to by the `w3m-save-list' function.

`w3m-file-name-coding-system'
     Coding system used to convert pathnames when emacs-w3m accesses
     files.

`w3m-fill-column'
     Integer used as the value for `fill-column' in emacs-w3m buffers.
     If it is positive, pages will be displayed within the columns of
     that number.  If it is zero or negative, the number of columns
     which subtracted that number from the window width is applied to
     the maximum width of pages.  Note that XEmacs does not always obey
     this setting.

`w3m-follow-redirection'
     Maximum number of redirections which emacs-w3m honors and follows.
     If `nil', redirections are followed by the `w3m' command.  Don't
     set it to `nil' if you allow to use cookies (i.e., you have set
     `w3m-use-cookies' to non-`nil') since cookies may be shared among
     many redirected pages.

`w3m-home-page'
     This variable specifies the url string to open when emacs-w3m
     starts.  Don't say HP, it's the abbreviated name of a certain
     company. ;-)

`w3m-horizontal-scroll-columns'
     Number of steps in columns used when scrolling a window
     horizontally.

`w3m-horizontal-scroll-division'
     Integer used by the program making the point certainly visible.
     The cursor definitely does not go missing even when it has been
     driven out of the window while wandering around anchors and forms
     in an emacs-w3m buffer.

     Suppose that the value of this variable is N.  When the point is
     outside the left of the window, emacs-w3m scrolls the window so
     that the point may be displayed on the position within 1/N of the
     width of the window from the left.  Similarly, when the point is
     outside the right of the window, emacs-w3m scrolls the window so
     that the point may be displayed on the position of 1/N of the
     width of the window from the right.

     This feature doesn't work if `w3m-auto-show' is `nil'.  The value
     must be a larger integer than 1.

`w3m-horizontal-shift-columns'
     Number of steps in columns used when shifting a window
     horizontally.  The term `shifting' means a fine level scrolling.

`w3m-imitate-widget-button'
     If non-`nil', imitate the widget buttons on link (anchor) buttons.
     It is useful for moving about in a Gnus article buffer using `TAB'
     key.  It can also be any Lisp form that should return a boolean
     value.

`w3m-init-file'
     Your emacs-w3m startup file name.  If a file with the `.el' or
     `.elc' suffixes exists, it will be read instead.

     Note: This file is used as the startup configuration _NOT_ for the
     `w3m' command but for emacs-w3m.  In order to modify configurations
     for the `w3m' command, edit the file named `~/.w3m/config'
     normally.

`w3m-input-coding-system'
     Coding system used when writing to `w3m' processes.  It overrides
     `coding-system-for-write' if it is not `binary'.  Otherwise, the
     value of the `w3m-current-coding-system' variable is used instead.

`w3m-keep-arrived-urls'
     Maximum number of URLs which the arrived URLs database keeps.

`w3m-keep-cache-size'
     Maximum number of pages to be cached in emacs-w3m.

`w3m-key-binding'
     Type of key binding set used in emacs-w3m sessions.  The valid
     values include `info' which provides Info-like keys, and `nil'
     which provides Lynx-like keys.

`w3m-language'
     Your preferred language used in emacs-w3m sessions.

`w3m-local-directory-view-method'
     Symbol of the method to view a local directory tree.  The valid
     values include `w3m-cgi' using the CGI program specified by the
     `w3m-dirlist-cgi-program' variable (which see), and `w3m-dtree'
     using the w3m-dtree Lisp module.

`w3m-local-find-file-function'
     Function used to open local files.  If a url of the `file:' scheme
     in which you entered agrees with the rule of the
     `w3m-local-find-file-regexps' variable (which see), it is used to
     open the file.

     Function should take one argument, the string naming the local
     file.  It can also be any Lisp form returning a function.  Set
     this to `nil' if you want to always use emacs-w3m to see local
     files.

`w3m-local-find-file-regexps'
     `Cons' of two regexps matching and not matching with local file
     names.  If a url of the `file:' scheme in which you entered matches
     the first form and does not match the latter form, it will be
     opened by the function specified by the
     `w3m-local-find-file-function' variable.  `Nil' for the regexp
     matches any file names.

     For instance, the value `(nil . "\\.html?\\'")' allows
     `file:///some/where/w3m.el', not `file:///any/where/index.html',
     to open by the function specified by
     `w3m-local-find-file-function'.  The latter will be opened as a
     normal web page.

     It is effective only when the `w3m-local-find-file-function'
     variable is set properly.

`w3m-mailto-url-function'
     Function used to handle the `mailto' urls.  Function is called with
     one argument, just a url.  If it is `nil', a function specified by
     the `mail-user-agent' variable will be used for composing mail
     messages.

`w3m-mailto-url-popup-function-alist'
     Alist of `(MAJOR-MODE . FUNCTION)' pairs used to pop a mail buffer
     up.  If a user clicks on a `mailto' url and a mail buffer is
     composed by `mail-user-agent' with the `MAJOR-MODE', `FUNCTION'
     will be called with a mail buffer as an argument.  Note that the
     variables `special-display-buffer-names',
     `special-display-regexps', `same-window-buffer-names' and
     `same-window-regexps' will be bound to `nil' while popping to a
     buffer up.

`w3m-make-new-session'
     Non-`nil' means making new emacs-w3m buffers when visiting new
     pages.  If it is non-`nil' and there are already emacs-w3m buffers,
     the `w3m' command makes a new emacs-w3m buffer if a user specifies
     a url string in the minibuffer, and the `w3m-safe-view-this-url'
     command also makes a new buffer if a user invokes it in a buffer
     not being running the `w3m-mode'.  The default value is `nil'.

`w3m-mbconv-command'
     Name of the `mbconv' command provided by the `libmoe' package.
     The `libmoe' package is used when you use the `w3mmee' command
     instead of the `w3m' command.  See also `w3m-command'.

`w3m-no-proxy-domains'
     List of domain names for which emacs-w3m will not use a proxy
     server.  Each element should be exactly a domain name which means
     the latter common part of the host names, not a regexp.

`w3m-output-coding-system'
     Coding system used when reading from `w3m' processes.

`w3m-pop-up-frames'
     Non-`nil' means pop to a new frame up for an emacs-w3m session.
     This variable is similar to `pop-up-frames' and does override
     `w3m-pop-up-windows'.  If `w3m-use-tab' is non-`nil' or there is
     the buffers selection window (for the `w3m-select-buffer'
     feature), this variable is ignored when creating the second or more
     emacs-w3m session.

`w3m-pop-up-windows'
     Non-`nil' means split the windows when a new emacs-w3m session is
     created.  This variable is similar to `pop-up-windows' and quite
     overridden by `w3m-pop-up-frames' as if `pop-up-frames'
     influences.  Furthermore, if `w3m-use-tab' is non-`nil' or there
     is the buffers selection window (for the `w3m-select-buffer'
     feature), this variable is ignored when creating the second or more
     emacs-w3m session.

`w3m-popup-frame-parameters'
     Alist of frame parameters used when creating a new emacs-w3m
     frame.  It allows not only the alist form but also XEmacs' plist
     form.

`w3m-prefer-cache'
     Non-nil means that cached contents are used without checking
     headers.

`w3m-profile-directory'
     Directory where emacs-w3m config files are loaded from or saved to.

`w3m-quick-start'
     Non-`nil' means let emacs-w3m start quickly w/o requiring
     confirmation.  When you invoke the `w3m' command, it attempts to
     visit the page of a string like url around the cursor or the value
     of `w3m-home-page'.  You won't be asked for the confirmation then
     if this value is non-`nil'.  Otherwise, you will be prompted for
     that url with the editing form.

`w3m-redirect-with-get'
     If non-`nil', use the GET method after redirection.  It controls
     how emacs-w3m works when a server responds the code 301 or 302.
     Here is an extract from RFC2616:

     Note: RFC 1945 and RFC 2068 specify that the client is not allowed
     to change the method on the redirected request.  However, most
     existing user agent implementations treat 302 as if it were a 303
     response, performing a GET on the Location field-value regardless
     of the original request method.

`w3m-relationship-estimate-rules'
     Rules to estimate relationships between a retrieved page and
     others.

`w3m-select-buffer-horizontal-window'
     Non-`nil' means split windows horizontally to open the selection
     window.

`w3m-select-buffer-window-ratio'
     The percentage of the selection window to the whole frame.  The
     car is used when splitting windows horizontally and the cdr is for
     splitting windows vertically.

`w3m-show-decoded-url'
     Non-nil means show decoded URIs in the echo area, the balloon, etc.
     This variable can take one of the following five kinds of forms:

       1. t

          Decode URIs using the encoding assumed by the default
          presumption rule based on the priority list including the
          encoding used to decode the current page and the value of
          `w3m-coding-system-priority-list'.

       2. Coding system

          Decode URIs using this value.

       3. List of coding systems

          Decode URIs using the encoding assumed based on this list.

       4. Alist of predicates and forms described below:

          Each element looks like the `(PREDICATE . ENCODING)' form.
          `PREDICATE' should be a regexp, a function or a Lisp form, and
          `ENCODING' should be one of the forms described here
          excluding this form.  If `PREDICATE' is a regexp, it will be
          tested whether it matches to the current url.  If it is a
          function, it will be called with no argument.  If it is a
          Lisp form, it will be simply evaluated.  Elements are tested
          in turn until the result of the test of the predicate is true
          and the encoding which is associated to the predicate is used
          for decoding URIs.

       5. nil

          Don't decode URIs.

`w3m-show-error-information'
     Non-`nil' means show an error information as a web page.  Page is
     made when the foreign server doesn't respond to a request to
     retrieve data.

`w3m-space-before-favicon'
     String of space char(s) to be put in front of favicon in the
     mode-line.  It may be better to use two or more spaces if you are
     using oblique or italic font in the modeline.

`w3m-space-before-modeline-icon'
     String of space character(s) to be put in front of the modeline
     icon.  It may be better to use one or more spaces if you are using
     oblique or italic font in the modeline.

`w3m-terminal-coding-system'
     Default coding system used when writing to `w3m' processes.  It is
     just a default value to set process' coding system initially.
     (This variable name is analogically derived from the behavior of
     the `w3m' command which accepts data from Emacs just like reads
     from the terminal.)

`w3m-touch-command'
     Name of the executable file of the touch command.  Note that the
     command is required to be able to modify file's timestamp with the
     `-t' option.

`w3m-track-mouse'
     Whether to track the mouse and message the url under the mouse.
     This feature does not work under Emacs or XEmacs versions prior to
     21.  See also `show-help-function' if you are using Emacs 21 or
     later.

     A tip for XEmacs users:

     You can also use the `balloon-help' feature by the `M-x
     balloon-help-mode' command with arg 1.  If the window manager
     decorates the balloon-help frame, and that is not to your taste,
     you may strip it off with the following directives:

          For ol[v]wm use this in .Xdefaults:
             olvwm.NoDecor: balloon-help
               or
             olwm.MinimalDecor: balloon-help
          
          For fvwm version 1 use this in your .fvwmrc:
             NoTitle balloon-help
          or
             Style "balloon-help" NoTitle, NoHandles, BorderWidth 0
          
          For twm use this in your .twmrc:
             NoTitle { "balloon-help" }

     See the `balloon-help.el' file for more information.

`w3m-uri-replace-alist'
     Alist of regexps matching URIs, and some types of replacements.
     It can be used universally to replace URI strings in the local
     rule to the valid forms in the Internet.

     Each element looks like the `(REGEXP FUNCTION OPTIONS...)' form.
     `FUNCTION' takes one or more arguments, a uri and `OPTIONS'.  You
     can use the grouping constructs `\\(...\\)' in `REGEXP', and they
     can be referred by the `\N' forms in a replacement (which is one
     of `OPTIONS').

     Here are some predefined functions which can be used for those
     ways:

    `w3m-pattern-uri-replace'
          Replace a URI using PATTERN (which is just an `OPTION').  It
          is allowed that PATTERN contains the `\N' forms in the same
          manner of `replace-match'.

    `w3m-search-uri-replace'
          Generate valid URLs to query words on some specified search
          engines.  For example, the element

               ("\\`gg:" w3m-search-uri-replace "google")

          makes it possible to replace the URI `gg:emacs' to a query
          for the word `emacs' on the Google search engine.

`w3m-url-local-directory-alist'
     Alist of URLs and local directories.  If directory names of a
     given URL and the car of an element are the same, emacs-w3m
     assumes that the file exists in the local directory where the cdr
     of an element points to.  The default value will be set to a value
     of the `yahtml-path-url-alist' variable which exchanged the car
     and the cdr in each element if it is available.

`w3m-use-ange-ftp'
     Non-`nil' means that `ange-ftp' or `efs' is used to access FTP
     servers.

`w3m-use-cygdrive'
     If non-`nil', use the `/cygdrive/' rule when performing
     `expand-file-name'.

`w3m-use-filter'
     Non-`nil' means use filter programs to convert web contents.  See
     also `w3m-filter-rules'.

`w3m-use-form'
     Non-`nil' means make it possible to use form extensions.
     _(EXPERIMENTAL)_

`w3m-use-header-line'
     Non-`nil' means display the header line.

`w3m-use-mule-ucs'
     Non-`nil' means use the multi-script support with Mule-UCS.

`w3m-use-refresh'
     Non-`nil' means honor the REFRESH attribute in META tags.
     Emacs-w3m arbitrarily takes you to a url specified by that
     attribute.  Note that they may be malicious traps.

`w3m-use-symbol'
     Non-`nil' means replace symbols that the `<_SYMBOL>' tags lead
     into.  It is meaningful only when the `w3m-m17n' command is used
     and (X)Emacs handles unicode charsets.

`w3m-use-tab'
     Non-`nil' means make emacs-w3m a tab browser.  It makes it possible
     to show all emacs-w3m buffers in a single window with the tabs
     line, and you can choose one by clicking a mouse on it.
     Unfortunately, users of Emacs 20 and less cannot enjoy this
     feature.  See also `w3m-use-tab-menubar'.

`w3m-use-tab-menubar'
     Non-`nil' means use the TAB pull-down menu in the menubar.  It
     makes it possible to show all emacs-w3m buffers in a single
     window, and you can choose one by clicking a mouse on it.  This
     feature requires that Emacs has been built to be able to display
     multilingual text in the menubar if you often visit web sites
     written in non-ascii text.  See also `w3m-use-tab'.

`w3m-use-toolbar'
     Non-`nil' activates toolbar of `w3m'.

`w3m-user-agent'
     String used for the User-Agent field.  See also
     `w3m-add-user-agent'.

`w3m-view-this-url-new-session-in-background'
     Run `w3m-view-this-url' without switching to the newly created
     buffer.  It is useful if you enabled the tabs line or the buffers
     selection window for the `w3m-select-buffer' feature.  Note that it
     is meaningful only when specifying a prefix argument to the
     `w3m-view-this-url' command or using the
     `w3m-view-this-url-new-session' command in order to create a new
     emacs-w3m session.


File: emacs-w3m.info,  Node: Image Variables,  Next: Form Variables,  Prev: General Variables,  Up: Customizable Variables

Variables related to images
===========================

`w3m-default-display-inline-images'
     Non-`nil' means display images inline in emacs-w3m buffers.  You
     can toggle the visibility of images with the
     `w3m-toggle-inline-images' command.  See also
     `w3m-toggle-inline-images-permanently'.

`w3m-favicon-cache-expire-wait'
     The cache will be expired after specified seconds passed since
     retrieval.  If this variable is `nil', never expired.

`w3m-favicon-cache-file'
     Filename of saving favicon cache.  It defaults to the file named
     `.favicon' under the directory specified by the
     `w3m-profile-directory' variable.

`w3m-favicon-size'
     Size of favicon. This value is used as geometry argument for
     `convert'.

`w3m-favicon-type'
     Image type of display favicon.

`w3m-favicon-use-cache-file'
     If non-`nil', use favicon cache file.

`w3m-icon-directory'
     Directory where emacs-w3m should find icon files.

`w3m-imagick-convert-program'
     Program name of ImageMagick's `convert'.

`w3m-treat-image-size'
     Non-`nil' means let the `w3m' command mind the ratio of the size
     of images and text.  The default value is `t'.

     If it is non-`nil', the `w3m' command will make a `halfdump' which
     reserves rectangle spaces in which images will be put, and also
     `alt' texts will be truncated or padded with spaces so that their
     display width will be the same as the width of images.

     See also `w3m-pixels-per-character' and `w3m-pixels-per-line'.
     Those values will be passed to the `w3m' command in order to
     compute columns and lines which images occupy.

`w3m-pixels-per-character'
     Integer used for the `-ppc' argument of the `w3m' command.  If
     `nil', the width of the default face is used.  It is valid only
     when `w3m-treat-image-size' is non-`nil'.  The default value is
     `nil'.  If you want to use emacs-w3m in a character terminal and
     make `w3m-treat-image-size' effective, you need to set this
     variable properly.

`w3m-pixels-per-line'
     Integer used for the `-ppl' argument of the `w3m' command.  If
     `nil', the height of the default face is used.  It is valid only
     when `w3m-treat-image-size' is non-`nil'.  Note that a small value
     may not induce a good result.  The default value is `64'.  If you
     want to use emacs-w3m in a character terminal and make
     `w3m-treat-image-size' effective, you need to set this variable
     properly.

`w3m-resize-image-scale'
     Number of steps in percent used when resizing images.

`w3m-resize-images'
     If non-`nil', resize images to the specified width and height.

`w3m-show-graphic-icons-in-header-line'
     Non-`nil' means show graphic status indicators in the header-line.
     If it is `nil', also the favicon won't be shown in the header-line
     even if `w3m-use-favicon' is non-`nil'.  This variable is
     currently meaningless under XEmacs.

`w3m-show-graphic-icons-in-mode-line'
     Non-`nil' means show graphic status indicators in the mode-line.
     If it is `nil', also the favicon won't be shown in the mode-line
     even if `w3m-use-favicon' is non-`nil'.

`w3m-toggle-inline-images-permanently'
     Non-`nil' means let the visibility of images continue permanently.
     The visibility of images is initialized according to
     `w3m-default-display-inline-images' at the first time, and except
     that it may be toggled by the `w3m-toggle-inline-images' command,
     it does not change hereafter, if it is non-`nil'.  Otherwise,
     whether images are visible is initialized according to
     `w3m-default-display-inline-images' whenever you visit a new page
     or reload the current page in an emacs-w3m buffer.

`w3m-use-favicon'
     Non-`nil' means show favicon images if they are available.  It will
     be set to `nil' automatically if ImageMagick's `convert' program
     does not support the ico format.


File: emacs-w3m.info,  Node: Form Variables,  Next: Cookie Variables,  Prev: Image Variables,  Up: Customizable Variables

Variables related to forms
==========================

`w3m-form-input-map-buffer-lines'
     Buffer lines for form select map buffer.

`w3m-form-input-select-buffer-lines'
     Buffer lines for form select buffer.

`w3m-form-input-textarea-buffer-lines'
     Buffer lines for form textarea buffer.

`w3m-form-mouse-face'
     Mouse face to highlight selected value.

`w3m-form-treat-textarea-size'
     Non-`nil' means to process textarea size (treat textarea rows).

`w3m-form-use-fancy-faces'
     Use fancy faces to fontify `<form>' tags.

`w3m-form-use-textarea-backup'
     Non-`nil' means save and restore backup text saved when you last
     edited this textarea.  Files to save text are stored in the
     directory specified by the `w3m-form-textarea-directory' variable.


File: emacs-w3m.info,  Node: Cookie Variables,  Next: Bookmark Variables,  Prev: Form Variables,  Up: Customizable Variables

Variables related to cookies
============================

`w3m-cookie-accept-bad-cookies'
     If `nil', don't accept bad cookies.  If `t', accept bad cookies.
     If ask, ask user whether accept bad cookies or not.

`w3m-cookie-accept-domains'
     A list of trusted domain name string.

`w3m-cookie-file'
     File in which cookies are kept.

`w3m-cookie-reject-domains'
     A list of untrusted domain name string.

`w3m-use-cookies'
     Non-`nil' means enable emacs-w3m to use cookies.  _(EXPERIMENTAL)_


File: emacs-w3m.info,  Node: Bookmark Variables,  Next: Search Variables,  Prev: Cookie Variables,  Up: Customizable Variables

Variables related to bookmarks
==============================


File: emacs-w3m.info,  Node: Search Variables,  Next: Weather Variables,  Prev: Bookmark Variables,  Up: Customizable Variables

Variables related to searching the web
======================================


File: emacs-w3m.info,  Node: Weather Variables,  Next: Dtree Variables,  Prev: Search Variables,  Up: Customizable Variables

Variables related to weather information
========================================


File: emacs-w3m.info,  Node: Dtree Variables,  Next: Antenna Variables,  Prev: Weather Variables,  Up: Customizable Variables

Variables related to the dtree feature
======================================


File: emacs-w3m.info,  Node: Antenna Variables,  Next: Perldoc Variables,  Prev: Dtree Variables,  Up: Customizable Variables

Variables related to antenna
============================


File: emacs-w3m.info,  Node: Perldoc Variables,  Next: Namazu Variables,  Prev: Antenna Variables,  Up: Customizable Variables

Variables related to perldoc
============================


File: emacs-w3m.info,  Node: Namazu Variables,  Next: Octet Variables,  Prev: Perldoc Variables,  Up: Customizable Variables

Variables related to namazu
===========================


File: emacs-w3m.info,  Node: Octet Variables,  Next: Hooks,  Prev: Namazu Variables,  Up: Customizable Variables

Variables related to the octet feature
======================================


File: emacs-w3m.info,  Node: Hooks,  Next: Other Variables,  Prev: Octet Variables,  Up: Customizable Variables

Hooks
=====

`w3m-after-cursor-move-hook'
     Hook run each time after the cursor moves in emacs-w3m buffers.
     This hook is called by the `w3m-check-current-position' function
     by way of `post-command-hook'.

`w3m-delete-buffer-hook'
     Hook run when every emacs-w3m buffer is deleted.

`w3m-display-hook'
     Hook run after displaying pages in emacs-w3m buffers.  Each
     function is called with a url string as the argument.  This hook
     is evaluated by the `w3m-goto-url' function.

`w3m-fontify-after-hook'
     Hook run after fontifying emacs-w3m buffers.  This hook is
     evaluated by the `w3m-fontify' function.

`w3m-fontify-before-hook'
     Hook run when starting to fontify emacs-w3m buffers.  This hook is
     evaluated by the `w3m-fontify' function.

`w3m-form-input-map-mode-hook'
     A hook called after w3m-form-input-map-mode.

`w3m-form-input-map-set-hook'
     A Hook called before w3m-form-input-map-set.

`w3m-form-input-select-mode-hook'
     A hook called after w3m-form-input-select-mode.

`w3m-form-input-select-set-hook'
     A Hook called before w3m-form-input-select-set.

`w3m-form-input-textarea-mode-hook'
     A hook called after w3m-form-input-textarea-mode.

`w3m-form-input-textarea-set-hook'
     A Hook called before w3m-form-input-textarea-set.

`w3m-minor-mode-hook'
     Hook run after `w3m-minor-mode' initialization.

`w3m-mode-hook'
     Hook run after `w3m-mode' initialization.  This hook is evaluated
     by the `w3m-mode' function.

`w3m-select-buffer-hook'
     Hook run when a different emacs-w3m buffer is selected.


File: emacs-w3m.info,  Node: Other Variables,  Prev: Hooks,  Up: Customizable Variables

Other variables
===============

`w3m-async-exec'
     Non-`nil' means execute the `w3m' command asynchronously in Emacs
     process.

`w3m-broken-proxy-cache'
     Set it to `t' if the proxy server seems not to work properly in
     caching.  Note that this may be the double-edged sword; setting it
     to `t' will likely be harmful if the proxy server sends bad
     requests (e.g., not including the Host header, see RFC2616 section
     14.23) to foreign servers when the `w3m' command specifies the
     `no-cache' directive.  Also note that it may not be effective if
     you are using old `w3m' command.

`w3m-history-minimize-in-new-session'
     Non-`nil' means minimize copied history so that there's only
     current page.  This variable is effective when creating of the new
     session by copying (i.e., `w3m-copy-buffer').  The default value is
     `nil'.

`w3m-history-reuse-history-elements'
     Non-`nil' means reuse the history element when re-visiting the
     page.  Otherwise, a new history element will be created even if
     there are elements for the same url in the history.

     Emacs-w3m used to operate as the case in which it is non-`nil',
     however it sometimes brought about users' dissatisfaction.  For
     example, if a user visited the pages A -> B -> C -> B in order,
     performing BACK on the second B would let a user visit A.  The
     reason why a user was taken to A rather than C is that the
     `w3m-history' variable only had the list `(A B C)' as a history
     and B was the current position at that time.

     The default value for this variable is `nil' which allows the
     `w3m-history' variable to have the list `(A B C B)'.  Where
     contents of two B's are the identical Lisp objects.  So, too much
     wasting the Lisp resources will be avoided.

     See the documentation for the variables `w3m-history' and
     `w3m-history-flat' for more information.

`w3m-process-connection-type'
     Value for `process-connection-type' used when communicating with
     `w3m'.

`w3m-process-modeline-format'
     Format used when displaying the progress of the external `w3m'
     process.  It shows a percentage of the data loaded from the web
     server.

`w3m-xmas-show-current-title-in-buffer-tab'
     If non-`nil', show the title strings in the buffers tab.  It has no
     effect if your XEmacs does not support the gutter items.


File: emacs-w3m.info,  Node: Hooking into MUAs,  Next: Frequently Asked Questions,  Prev: Customizable Variables,  Up: Top

Hooking emacs-w3m into mail/newsreaders
***************************************

   This section introduces three Message User Agents (MUAs).  All those
MUAs can display HTML mails properly using emacs-w3m.  You'll find here
HowTo's and some notes about setting up and using emacs-w3m with each
of these MUAs.

   Quick note about the conventions we use: what does `message' mean?
When a Gnus user says `message', it often means a draft of a message to
be sent as mail or news.  However, it is the term used by Mew or
Wanderlust users for received mail.  They use `draft' for the draft of
a message to be sent.  On the other hand, a received message is called
an `article' by Gnus users.

* Menu:

* Gnus::                        Reading HTML mails in Gnus
* Mew::                         Reading HTML mails in Mew
* SEMI MUAs::                   Reading HTML mails in SEMI MUAs
* VM::                          VM (vieW maiL) is not Wanderlust


File: emacs-w3m.info,  Node: Gnus,  Next: Mew,  Up: Hooking into MUAs

Reading HTML mails in Gnus
==========================

   Did you know that Gnus, the Emacs newsreader, supports emacs-w3m?

   Actually, the version of Gnus bundled with Emacs does not support
emacs-w3m (yet).  You'd better use the latest version of Gnus.  It is
available at:

   `ftp://ftp.gnus.org/pub/gnus/gnus.tar.gz'

   Note: if emacs-w3m *is* supported in the Gnus version that comes
with your Emacs distribution, it means either that this documentation is
out-of-date (please report this bug as described in *Note Mailing
List::), or that you're using a very old version of emacs-w3m (in which
case you should update it to a newer version).

   * What can you do with emacs-w3m?

     You can convert HTML spam mails to be human-readable using
     emacs-w3m.  Of course, it works for HTML ham (non-spam) mails as
     well, and for both emacs-w3m is probably faster than the default
     converter.  You don't need to perform any additional operation.
     It will simply be displayed.

     On HTML parts of an article buffer, the `w3m-minor-mode' is turned
     on and you can use the same main keys as the keys of emacs-w3m, for
     instance, <RET> is for visiting a page which a link in the current
     position points to.  Those keys are defined in the
     `w3m-minor-mode-command-alist' variable.  Keep in mind that some
     commands are replaced by others similar to them, for security
     reasons (see below).

   * What do you have to do?

     Read the Gnus manual (*note Display Customization:
     (emacs-mime)Display Customization.).  The easiest way is to put
     the following line in your `~/.gnus.el' file:

          (setq mm-text-html-renderer 'w3m)

     Also put the following line if you want to show images inline in
     article buffers:

          (setq mm-inline-text-html-with-images t)

     If you don't need to use emacs-w3m keys in article buffers, add the
     following line too:

          (setq mm-inline-text-html-with-w3m-keymap nil)

   * Notes

     The above description about spam and ham is not for kidding, it's
     just here to get your attention.  Some HTML mails might contain a
     nasty trick used by spammers, using the `<img>' tag which is far
     more evil than the `Click Here!' button.  It is most likely
     intended to check whether the ominous spam mail has reached your
     eyes or not, in which case the spammer knows for sure that your
     email address is valid.  It is done by embedding an identifier
     string into a URL that you might automatically retrieve when
     displaying the image.  If the `mm-w3m-safe-url-regexp' variable
     has not been changed from the default value, Gnus will never
     connect to the spammer's site arbitrarily.

     You can display images inline in an article buffer if you set
     `mm-inline-text-html-with-images' to `t', can't you?  No, not
     exactly: you're still being protected.  If you don't care about
     leaking information (i.e. the fact that your mail address is
     reachable), set the `mm-w3m-safe-url-regexp' variable to `nil'.
     The default value for `mm-w3m-safe-url-regexp' is `"\\`cid:"'
     which means we consider that images included in a mail with the
     `cid:' URL are safe (that is, you can display such images without
     modifying the `mm-w3m-safe-url-regexp' variable).

   * Giveaway

     Even when you are in the summary buffer, you can toggle displaying
     of images in the article buffer.  It is effective only when those
     images are displayed by emacs-w3m, though.  Here's an example:

          (defun gnus-summary-w3m-safe-toggle-inline-images (&optional arg)
            "Toggle displaying of all images in the article buffer.
          If the prefix arg is given, all images are considered to be safe."
            (interactive "P")
            (save-excursion
              (set-buffer gnus-article-buffer)
              (w3m-safe-toggle-inline-images arg)))
          
          (eval-after-load "gnus-sum"
            '(define-key gnus-summary-mode-map
               "\C-i" 'gnus-summary-w3m-safe-toggle-inline-images))

See also *Note Nnshimbun::.


File: emacs-w3m.info,  Node: Mew,  Next: SEMI MUAs,  Prev: Gnus,  Up: Hooking into MUAs

Reading HTML mails in Mew
=========================

   By using emacs-w3m with Mew, you can see HTML mails as it intended
to be displayed.  To do so, put the following line in the `~/.mew.el'
file:

     (require 'mew-w3m)

With just this, an HTML mail will be displayed in the message window as
if it were a plain text.  You can still use the `C-c C-e' command
(`mew-summary-execute-external') there.

   It is also quite common these days to see mails containing the same
information twice, they use the `multipart/alternative' format which
consists of both a `text/plain' part and a `text/html' part (what a
waste of bandwidth it is).  Mew displays only the `text/plain' part of
such a mail by default.  However, you perhaps want to see the
`text/html' part since you are using emacs-w3m.  If so, add the
following lines to the `~/.mew.el' file:

     (setq mew-mime-multipart-alternative-list
           '("Text/Html" "Text/Plain" ".*"))

There are some customizable variables related to Mew:

`mew-use-w3m-minor-mode'
     If non-`nil', the `w3m-minor-mode' is turned on in the message
     buffer where a text/html part is displayed, and you can use the
     same main keys as the keys of emacs-w3m, for instance, <RET> is for
     visiting a page which a link in the current position points to.
     Those keys are defined in the `w3m-minor-mode-command-alist'
     variable.  Keep in mind that some commands are replaced by others
     similar to them, for security reasons.  The default value is `nil'.

`mew-w3m-auto-insert-image'
     If non-`nil', you can see images inline in the message buffer when
     you read a multipart/related message.  Note that mew-w3m only
     allows images contained in the message body with a `cid:' URL to be
     displayed (as we consider them safe).  The default value is `nil'.

     To activate this feaeture, add following in your `~/.mew.el'.

          (define-key mew-summary-mode-map "T" 'mew-w3m-view-inline-image)

     Press "T", toggle the visibility of the images included its
     message only.  Press "C-uT", display the all images included its
     Text/Html part."

`mew-w3m-cid-retrieve-hook'
     A hook run just after retrieving a `cid:' URL.  The default value
     is `nil'.

See also *Note Mew Shimbun::.


File: emacs-w3m.info,  Node: SEMI MUAs,  Next: VM,  Prev: Mew,  Up: Hooking into MUAs

Reading HTML mails in SEMI MUAs
===============================

   You can display HTML mails as human-readable, using emacs-w3m and
SEMI MUAs, for example, Wanderlust, T-gnus, etc.  Since those MUAs
depend on SEMI (and also FLIM) for MIME functions, we generically call
them SEMI MUAs.  Although SEMI uses Emacs/W3 for rendering HTML mails
by default, it can easily be altered to emacs-w3m and it will make your
cyber life still more comfortable.

You simply need to put the following line in `~/.emacs' file:

     (require 'mime-w3m)

   The `mime-w3m' and `mime-w3' modules are functionally alike, as you
might have guessed (see how the names sound alike?).  The latter is
included in the SEMI package.

   On HTML parts of an article buffer, the `w3m-minor-mode' is turned
on and you can use the same main keys as the keys of emacs-w3m, for
instance, <RET> is for visiting a page which a link in the current
position points to.  Those keys are defined in the
`w3m-minor-mode-command-alist' variable.  Keep in mind that some
commands are replaced by others similar to them, for security reasons.

   There are some customizable variables related to the `mime-w3m'
module:

`mime-w3m-display-inline-images'
     If it is non-`nil', images will be displayed inline in HTML mails.
     If it is the symbol `default' (which is the default) at the first
     time, the value of this variable will be replaced with the value
     of the `w3m-default-display-inline-images' variable.  You probably
     don't need to change this.

`mime-w3m-safe-url-regexp'
     Regexp matching URLs which are considered to be safe.  The default
     value is `"\\`cid:"' which means we consider that images included
     in a mail with the `cid:' URLs are safe.  See also *Note Gnus::
     about rogue attacks.

`mime-w3m-setup-hook'
     A hook run just after setting up the cooperation of the `mime-w3m'
     module and SEMI.  The default value is `nil'.

   By the way, even when you are in the summary buffer, you can toggle
displaying of images in the article buffer (which is what is called the
message buffer in the Wanderlust community).  It is effective only when
those images are displayed by emacs-w3m, though.  Here're examples for
T-gnus, Nana-gnus and Wanderlust:

     ;; T-gnus or Nana-gnus:
     (defun gnus-summary-w3m-safe-toggle-inline-images (&optional arg)
       "Toggle displaying of all images in the article buffer.
     If the prefix arg is given, all images are considered to be safe."
       (interactive "P")
       (save-excursion
         (set-buffer gnus-article-buffer)
         (w3m-safe-toggle-inline-images arg)))
     
     (eval-after-load "gnus-sum"
       '(define-key gnus-summary-mode-map
          "\C-i" 'gnus-summary-w3m-safe-toggle-inline-images))
     
     ;; Wanderlust:
     (defun wl-summary-w3m-safe-toggle-inline-images (&optional arg)
       "Toggle displaying of all images in the message buffer.
     If the prefix arg is given, all images are considered to be safe."
       (interactive "P")
       (save-excursion
         (set-buffer wl-message-buffer)
         (w3m-safe-toggle-inline-images arg)))
     
     (eval-after-load "wl-summary"
       '(define-key wl-summary-mode-map
          "\M-i" 'wl-summary-w3m-safe-toggle-inline-images))

See also *Note Nnshimbun:: if you are using T-gnus or Nana-gnus.


File: emacs-w3m.info,  Node: VM,  Prev: SEMI MUAs,  Up: Hooking into MUAs

VM (vieW maiL) is not Wanderlust
================================

   Emacs-w3m is not supporting VM positively.  It is simply because
there is no VM user in the emacs-w3m team.  However, don't be
pessimistic.  There is the `vm-w3m.el' module in the attic directory of
the emacs-w3m distribution.  You are a lucky person if it is helpful to
you.  Try it anyhow.  You can find how to use it in the file itself.

   If you want to toggle displaying of images in the presentation buffer
when you are in any VM buffer, use the following:

     (define-key vm-mode-map "T" 'vm-w3m-safe-toggle-inline-images)


File: emacs-w3m.info,  Node: Frequently Asked Questions,  Next: Known Problems,  Prev: Hooking into MUAs,  Up: Top

There isn't always an answer
****************************

* Menu:

* General FAQ::                 General Questions
* Trouble FAQ::                 Troubleshooting
* Shimbun FAQ::                 Questions of Shimbun Library


File: emacs-w3m.info,  Node: General FAQ,  Next: Trouble FAQ,  Up: Frequently Asked Questions

General Questions
=================

   * Q. What's emacs-w3m?

     It is an interface program on Emacs which controls w3m.  For more
     information, see *Note Introduction::.

   * Q. Which emacs versions are supported?

     The following Emacsen have been checked for emacs-w3m support:

        * Mule 2.3 (based on Emacs 19.34)

        * Emacs 19.34

        * Emacs 20

        * Emacs 21

        * Emacs 22

        * XEmacs 21.1 with Mule

        * XEmacs 21.2 with Mule (beta37 or greater)

        * XEmacs 21.4 with/without Mule

        * XEmacs 21.5 with/without Mule

        * Meadow

     Note that you're required to use APEL if you'd like to run
     emacs-w3m under Mule 2.3, Emacs 19.34 or XEmacs.  For more
     information, see *Note Other Requirements::.

     Emacs-w3m works on Emacs 19.34 or XEmacs without the Mule feature
     except for several commands, such as the command to look weather
     forecasts in Japan.  They strongly depends on the Mule feature, so
     that they must not work on Emacs 19.34 or XEmacs without Mule.

   * Q. Which w3m versions are supported?

     The following w3m versions have been checked for emacs-w3m support:

        * w3m-0.3 and later

        * w3mmee-p24-18 + moe-1.5.4

          Note that w3mmee mentioned as the example is configured with
          the `lang=many' option (it can be done by entering 3, when the
          `configure' script prompts you, "Which language do you
          prefer?").  It also requires the `libmoe' package.

   * Q. I've already installed APEL in the XEmacs SUMO package, is it
     ok?

     There are some problems in the XEmacs APEL package (all modules
     have been compiled for XEmacs with Mule); for instance, the
     `std11' modules conflict with the FLIM's one, etc.  Even though
     you can use `apel-1.23-pkg.tar.gz' or later for both XEmacs with
     Mule and non-Mule XEmacs if you don't use FLIM for the `shimbun'
     features, we recommend you replace it or newly install the
     original APEL package.  See *Note Other Requirements:: where to
     get it from.

   * Q. I've gotten the developing version of emacs-w3m with CVS,
     however I'm missing `configure' script.

     It is necessary to run `autoconf' first, to generate `configure'
     script.

