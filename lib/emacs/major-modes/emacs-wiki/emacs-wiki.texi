\input texinfo @c -*-texinfo-*-
@c %**start of header
@setfilename emacs-wiki.info
@settitle emacs-wiki
@c %**end of header

@dircategory Emacs
@direntry
* emacs-wiki: (emacs-wiki). Wiki hypertext markup system for Emacs.
@end direntry

@syncodeindex fn cp

@copying
This manual is for emacs-wiki version 2.70.

For a list of the copyright holders, @ref{Contributors}

@quotation
Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU General Public License.
@end quotation
@end copying

@titlepage
@title Guide to emacs-wiki
@subtitle a hypertext markup system
@subtitle for GNU Emacs and Xemacs

@c The following two commands
@c start the copyright page.
@page
@vskip 0pt plus 1filll
@insertcopying
@end titlepage

@c So the toc is printed at the start
@contents

@ifnottex
@node Top, Preface, (dir), (dir)
@comment  node-name,  next,  previous,  up
@top emacs-wiki

@insertcopying
@end ifnottex

@menu
* Preface::                     About the documentation
* Introduction::                What is emacs-wiki?
* Installation::                How to get the stable and development versions
* Wiki Concepts::               About Wiki
* Getting Started::
* Keystroke Summary::
* Markup Rules::                Wiki markup used
* Interactive Functions::
* Convenience Features::        Miscellaneous features
* Tables::                      Table support via emacs-wiki-table.el
* Multiple Projects::           Multiple project or interwiki support
* Encryption::                  Keeping some parts private
* Getting Help and Reporting Bugs::
* Contributors::                Contributors to this documentation
* GNU General Public License::
* Concept Index::

@detailmenu
 --- The Detailed Node Listing ---

Installation

* Releases::            Released versions of emacs-wiki
* Development::         Latest unreleased changes

Markup Rules

* Basic WikiMarkups::
* Changing Title or Stylesheet::
* Lists::
* Images::
* Lisp Tricks::
* Non-existent Links::
* Special Markups::

Encryption

* Interface to PGG::    Personalize PGG encrypt/decrypt functions
* gpg Tag::             Interactively encrypt/decrypt text
* gpge Tag::            Automatically encrypt text on publish

@end detailmenu
@end menu

@node Preface, Introduction, Top, Top
@comment  node-name,  next,  previous,  up
@chapter Preface

This document describes emacs-wiki, which was written by John Wiegley
and is now maintained by Michael Olson.

This document is a work in progress, and your contribution will be
greatly appreciated. Please email comments and suggestions to the
maintainer, Michael Olson @email{mwolson@@gnu.org} .

@node Introduction, Installation, Preface, Top
@comment  node-name,  next,  previous,  up
@chapter Introduction

emacs-wiki enables you to create and use hyperlinks and simple
formatting in plain text files, and to optionally publish your pages
as HTML.

@itemize
@item 2004

Damien Elmes handed EmacsWikiMode to Mark Triggs for a short period of
time.  Mark Triggs deferred to Sacha Chua as official maintainer of
PlannerMode.  Sacha Chua volunteered to maintain RememberMode.
Michael Olson became the maintainer of EmacsWikiMode later that year.

@item 2003

Sacha Chua volunteered to maintain PlannerMode.  Damien Elmes
volunteered to maintain EmacsWikiMode.

@item 2001

John Wiegley wrote EmacsWikiMode and PlannerMode.
@end itemize

@node Installation, Wiki Concepts, Introduction, Top
@comment  node-name,  next,  previous,  up
@chapter Installation

@menu
* Releases::            Released versions of emacs-wiki
* Development::         Latest unreleased changes
@end menu

@node Releases, Development, Installation, Installation
@comment  node-name,  next,  previous,  up
@section Installing a release

Choose to install a release if you want to minimize risk.

Errors are corrected in development first.  Once fixes are confirmed, a
new release will be made.  User-visible changes will be announced on the
@email{emacs-wiki-discuss@@nongnu.org} mailing list.  @pxref{Getting
Help and Reporting Bugs}.

@cindex Debian package for emacs-wiki

Debian users can get emacs-wiki via apt-get.  The version of
emacs-wiki in the Debian stable archive is not recommended, since it
is so old.  @file{emacs-wiki} is available in the Sarge and Sid
distributions: @kbd{apt-get install emacs-wiki} .

@cindex releases, from source

You can also install the source distribution.

@enumerate
@item Download and unpack the latest version from @uref{http://www.mwolson.org/static/dist/emacs-wiki/} .
@item Edit your @file{~/.emacs}.

@example
;; Add the directories to your load path
(add-to-list 'load-path "/path/to/emacs-wiki")
;; Load emacs-wiki
(require 'emacs-wiki)
@end example

@end enumerate

You can download the archive at the following locations:

@itemize
@item Current and past releases: @uref{http://www.mwolson.org/static/dist/emacs-wiki/}
@item Debian installation: @kbd{apt-get install emacs-wiki}
@end itemize

@node Development,  , Releases, Installation
@comment  node-name,  next,  previous,  up
@section Installing the development version
@cindex development

Choose the development version if you want to live on the bleeding
edge of emacs-wiki development or try out new features before release.

@cindex arch revision control system, downloading
The Arch revision control system allows you to retrieve previous
versions and select specific features and bug fixes.

Downloading the modules for the first time:

@enumerate
@item Install arch. Debian: @kbd{apt-get install tla} .  Other distros: see @uref{http://regexps.srparish.net/www/} .
@item Register the archive and download the modules.

@example
# Register the archive
tla register-archive http://www.mwolson.org/archives/2005

# Download emacs-wiki module into the emacs-wiki/ subdirectory
tla get mwolson@@gnu.org--2005/emacs-wiki--main--1.0 emacs-wiki
@end example

@item Open your @file{~/.emacs} and add the @file{emacs-wiki/} directory to your load path.

@example
(add-to-list 'load-path "/path/to/emacs-wiki")
@end example

@end enumerate

To list upstream changes not in local copy:

@example
# Change to the source directory you are interested in. Example:
cd emacs-wiki/

# Display the summary of changes
tla missing --summary
@end example

@cindex updating emacs-wiki with arch

To update to the latest version:

@example
cd emacs-wiki
tla replay
@end example

You can also obtain the archive at the following locations on the web:

@itemize
@item Browse arch repository: @uref{http://www.mwolson.org/archives/}
@item Latest development snapshot: @uref{http://www.mwolson.org/static/dist/emacs-wiki-latest.tar.gz}
@end itemize

The latest development snapshot will be kept up to date since it is
updated at the same time as the Arch repository.

@node Wiki Concepts, Getting Started, Installation, Top
@comment  node-name,  next,  previous,  up
@chapter Wiki Concepts
@cindex @file{emacs-wiki.el}, using
@cindex wiki concepts
@cindex mixed case
@cindex camel case

Wiki is a concept, more than a thing.  It is a way of creating
document pages using plain text markup and simplified hyperlinking.

By typing a name in MixedCase (also known as CamelCase), a hyperlink
is automatically created to the document @file{MixedCase}.  Pressing
return on that name will create the file if it doesn't exist, or visit
it if it does.

The markup used by Emacs-Wiki is intended to be very friendly to
people familiar with Emacs.  Type @kbd{C-h v
emacs-wiki-publishing-markup} after this mode is loaded for more
information on how to get started.

Wiki's are often associated with sites that allow collaborative
editing of a website.  emacs-wiki is not meant to produce this sort of
site, although you can use Emacs to serve web pages.  See
@file{emacs-wiki-httpd.el} for more information.  Note that this
feature is not well-tested.

@node Getting Started, Keystroke Summary, Wiki Concepts, Top
@chapter Getting Started

To begin using Emacs-Wiki, put this in your @file{.emacs} file:

@lisp
(load ``emacs-wiki'')
@end lisp

Now you can type @kbd{M-x emacs-wiki-find-file}, give it a WikiName
(or just hit return) and start typing!

You should also type @kbd{M-x customize-group}, and give the name
@samp{emacs-wiki}.  Change it to suit your preferences.  Each of the
options has its own documentation.

@node Keystroke Summary, Markup Rules, Getting Started, Top
@chapter Keystroke Summary

Here is a summary of keystrokes available in every Wiki buffer:

@table @kbd

@item C-c C-a
Jump to an index of all the Wiki pages.

@item C-c C-b
Show all pages that reference this page.

@item C-c C-s
Search for a word in your Wiki pages.

@item C-c C-f
Jump to another Wiki page. Prompt for the name.

@item C-c C-l
Highlight/refresh the current buffer.

@item C-c C-p
Publish any Wiki pages that have changed as HTML.

@item C-c C-r
Rename Wiki link at point.

@item C-c C-t
Publish the current Wiki page.

@item C-c C-e
Edit link at point.

@item C-c C-v
Change Wiki project.

@item C-c C-D
Delete Wiki link at point. This binding will only work on X.

@item C-c =
Diff this page against the last backup version.

@item C-c TAB
Insert a tag interactively.

@item TAB
Move to the next Wiki reference.

@item S-TAB
Move to the previous Wiki reference.

@end table

@node Markup Rules, Interactive Functions, Keystroke Summary, Top
@chapter Markup Rules

@menu
* Changing Title or Stylesheet::
* Basic WikiMarkups::
* Lists::
* Images::
* Lisp Tricks::
* Non-existent Links::
* Special Markups::
@end menu

@node Basic WikiMarkups, Changing Title or Stylesheet, Markup Rules, Markup Rules
@section Basic WikiMarkups

Here is a description of the default markup rules:

@emph{Headings}

@verbatim
      * First level
      ** Second level
      *** Third level
@end verbatim

Note that the first level is actually indicated using H2, so that
it doesn't appear at the same level as the page heading (which
conceptually titles the section of that Wiki page).

@emph{Horizontal rules}

@verbatim
      ----
@end verbatim

@emph{Emphasis}

@verbatim
      *emphasis*
      **strong emphasis**
      ***very strong emphasis***
      _underlined text_
      =verbatim=
@end verbatim

@verbatim
      <verbatim>This tag should be used for larger blocks of text</verbatim>.
@end verbatim

@emph{Footnotes}

A reference[1], which is just a number in square brackets,
constitutes a footnote reference.

@verbatim
      Footnotes:

      [1]  Footnotes are defined by the same number in brackets
           occurring at the beginning of a line.  Use footnote-mode's C-c
           ! a command, to very easily insert footnotes while typing.  Use
           C-x C-x to return to the point of insertion.
@end verbatim

@emph{Paragraphs}

One or more blank lines separates paragraphs.

@emph{Centered paragraphs and quotations}

A line that begins with six or more columns of whitespace (made up
of tabs or spaces) indicates a centered paragraph.  I assume this
because it's expected you will use M-s to center the line, which
usually adds a lot of whitespace before it.

If a line begins with some whitespace, but less than six columns, it
indicates a quoted paragraph.

@emph{Poetic verse}

Poetry requires that whitespace be preserved, without resorting to
the monospace typical of <pre>.  For this, the following special
markup exists, which is reminiscent of e-mail quotations:

@verbatim
       > A line of Emacs verse;
       > forgive its being so terse.
@end verbatim

You can also use the <verse> tag, if you prefer:

@verbatim
       <verse>
       A line of Emacs verse;
       forgive its being so terse.
       </verse>
@end verbatim

@emph{Literal paragraphs}

Use the HTML tags <pre></pre> to insert a paragraph and preserve
whitespace.  If you're inserting a block of code, you will almost
always want to use <verbatim></verbatim> *within* the <pre> tags.
The shorcut for doing this is to use the <example> tag:

@verbatim
       <example>
       Some literal text or code here.
       </example>
@end verbatim

@emph{Tables}

There are two forms of table markup supported.  If Takaaki Ota's
table.el package is available, then simply create your tables using
his package, and they will be rendered into the appropriate HTML.
You need to (require 'emacs-wiki-table) for this functionality.

If table.el is not available, then only very simple table markup is
supported.  The attributes of the table are kept in
`emacs-wiki-table-attributes'.  The syntax is:

@verbatim
       Double bars || Separate header fields
       Single bars | Separate body fields
       Here are more | body fields
       Triple bars ||| Separate footer fields
@end verbatim

Other paragraph markup applies to both styles, meaning that if six
or more columns of whitespace precedes the first line of the table,
it will be centered, and if any whitespace at all precedes first
line, it will occur in a blockquote.

@emph{Anchors and tagged links}

#example If you begin a line with "#anchor" -- where anchor
can be any word that doesn't contain whitespace -- it defines an
anchor at that point into the document.  This anchor text is not
displayed.

You can reference an anchored point in another page (or even in the
current page) using WikiName#anchor.  The #anchor will never be
displayed in HTML, whether at the point of definition or reference,
but it will cause browsers to jump to that point in the document.

@emph{Redirecting to another page or URL}

Sometimes you may wish to redirect someone to another page.  To do
this, put:

@verbatim
       <redirect url=\"http://somewhereelse.com\"/>
@end verbatim

at the top of the page.  If the <redirect> tag specifies content,
this will be used as the redirection message, rather than the
default.

The numbers of seconds to delay is defined by
`emacs-wiki-redirect-delay', which defaults to 2 seconds.  The page
shown will also contain a link to click on, for browsing which do
not support automatic refreshing.

@emph{URLs}

A regular URL is given as a link.  If it's an image URL, it will
be inlined using an IMG tag.

@emph{Special handling of WikiNames}

If you need to add a plural at the end of a WikiName, separate it
with four single quotes (WikiName''''s) or make it an explicit
link ([[WikiName]]s).

To prevent a link name (of any type) from being treated as such,
surround it with =equals= (to display it in monotype), or prefix it
with the tag <nop> to escape it from WikiName markup.

@emph{Special Wiki links}

Besides the normal WikiName type links, emacs-wiki also supports
extended links:

@verbatim
       [[link text][optional link description]]
@end verbatim

An extended link is always a link, no matter how it looks.  This
means you can use any file in your `emacs-wiki-directories' as a
Wiki file.  If you provide an optional description, that's what will
be shown instead of the link text.  This is very useful for
providing textual description of URLs.

See the documentation to emacs-wiki-image-regexp for how to inline
files and images.

@emph{InterWiki names}

There are times when you will want to constantly reference pages on
another website.  Rather than repeating the URL ad nauseum, you can
define an InterWiki name.  This is a set of WikiNames to URL
correlations, that support textual substitution using #anchor names
(which are appended to the URL).  For example, MeatballWiki is
defined in the variable `emacs-wiki-interwiki-names'.  It means you
can reference the page \"MeatBall\" on MeatballWiki using this
syntax:

@verbatim
       MeatballWiki#MeatBall
@end verbatim

In the resulting HTML, the link is simply shown as

@verbatim
       MeatballWiki:MeatBall
@end verbatim

@node Changing Title or Stylesheet, Lists, Basic WikiMarkups, Markup Rules
@section Changing Title or Stylesheet

For convenience, if you want to change the visible title or the
stylesheet used by a certain Wiki page during HTML publishing,
just put:

@example
#title Hello there
#style hello.css
@end example

at the top of the page.

@node Lists, Images, Changing Title or Stylesheet, Markup Rules
@section Lists

Whitespace is required after bullets and numbers thot are part of a
list.

Here is an example:

@example
- This
- Is
- A
- List

1. This
2. too

But this is not,
--even if it starts with dashes
0.1] or numbers, as in the original test case.
@end example

@strong{Sub-lists?}

There is no inherent support for sub-lists, since the author couldn't
think of a simple way to do it.  But if you really need them, here's a
trick you can use:

@example
 - Hello
   <ul>
   <li>There
   <li>My friend
   </ul>
@end example

@node Images, Lisp Tricks, Lists, Markup Rules
@section Images

You can include links of the form @samp{[[some/link][some/image]]}. If
you want to include @var{alt} text, use @samp{[[some/link][some/image
alt text]]}.

You may need to have @code{auto-image-file-mode} set to @samp{t} for
this to work.

@node Lisp Tricks, Non-existent Links, Images, Markup Rules
@section Lisp Tricks

@code{<lisp></lisp>} tags can be used, not only to evaluate forms for
insertion at that point, but to influence the publishing process in
many ways.  Here's another way to change a page's stylesheet:

@smallexample
<lisp>
(ignore
  ;; use special.css for this Wiki page
  (set (make-variable-buffer-local 'emacs-wiki-style-sheet)
       "<link rel=\"stylesheet\" type=\"text/css\" href=\"special.css\" />"))
</lisp>
@end smallexample

The @code{ignore} is needed so nothing is inserted where the
@code{<lisp>} tag occurred.  Also, there should be no blank lines
before or after the tag (to avoid empty paragraphs from being
created).  The best place to put this would be at the very top or
bottom of the page.

@node Non-existent Links, Special Markups, Lisp Tricks, Markup Rules
@section Non-existent Links

By default, non-existent links are converted into mailto: links in
published HTML. This allows website visitors to e-mail
@code{emacs-wiki-maintainer} for missing information. If you want
non-existent links to be rendered as plain text, set
@code{emacs-wiki-markup-nonexistent-link} to nil.

In HTML served directly from Emacs using httpd and
emacs-wiki-httpd.el, non-existent links are always editable links.

@node Special Markups,  , Non-existent Links, Markup Rules
@section Special Markups

For specially marking up Wiki text, XML-style tags are the best way to
add custom markup to Emacs Wiki, which expects a closing tag and/or an
optional set of attributes. This is easily accomplished by customizing
this list of markup tags defined in @code{emacs-wiki-markup-tags}.

Here is a summary of the default tags. This also includes the dangerous
tags listed in @code{emacs-wiki-dangerous-tags}, which may not be used
by outsiders.

Please refer to document of @code{emacs-wiki-markup-tags} and
@code{emacs-wiki-dangerous-tags} for detail infomation and customization
instructions.

@emph{verbatim}

Protects against highlighting and wiki interpretation, and escapes any
characters which have special meaning to the publishing format. For
HTML, this means characters like '<' are escaped as HTML entities.

@emph{example}

Like verbatim, but typesets in HTML using the <pre> tag, with
class=example, so whitespace formatting is preserved.

@emph{nowiki}

Inhibits wiki markup, but does not do any escaping to the underlying
publishing medium. Useful for embedding HTML, PHP, etc.

@emph{verse}

Typesets like a normal paragraph, but without word-wrapping. That is,
whitespace is preserved.

@emph{redirect}

Using the "url" attribute, you can specify that a page should redirect
to another page. The remaining contents of the page will not be
published. The optional "delay" attribute specifies how long to wait
before redirecting.

@emph{nop}

When placed before a WikiLink, it will prevent that WikiLink from being
treated as such. Good for names like DocBook.

@emph{contents}

Produces a compact table of contents for any section heading at the same
level or lower than the next section header encountered. Optional
"depth" attribute specifies how deep the table of contents should go.

@emph{lisp}

Evaluate the region as a Lisp form, and displays the result. When
highlighting, the `display' text property is used, preserving the
underlying text. Turn off font-lock mode if you wish to edit it.

@emph{command}

Pass the region to a command interpretor and insert the result, guarding
it from any further expansion. Optional "file" attribute specifies the
shell or interpretor to use. If none is given, and
@code{emacs-wiki-command-tag-file} has not been configured, Eshell is
used.

@emph{python, perl}

Pass the region to the Python or Perl language interpretor, and insert
the result.

@emph{c-source}

Markup the region as C or C++ source code, using the c2html program, if
available. Optional boolean attribute "numbered" will cause source lines
to be numbered.

Note: If c2html is not available, the region will be converted to HTML
friendly text (i.e., <> turns into &lt;&gt;), and placed in a <pre>
block. In this case, line numbering is not available.

@emph{bookmarks}

Insert bookmarks at the location of the tag from the given bookmarks
file. Required attribute "file" specifies which file to read from, and
the optional attribute "type" may be one of: adr (for Opera), lynx,
msie, ns, xbel or xmlproc. The default type is "xbel". The optional
attribute "folder" may be used to specify which folder (and its
children) should be inserted.

@node Interactive Functions, Convenience Features, Markup Rules, Top
@chapter Interactive Functions

@file{emacs-wiki.el} defines the following interactive functions:

@defun emacs-wiki-edit-link-at-point
Edit the current link. Do not rename the Wiki page originally referred to.
@end defun

@defun emacs-wiki-find-file wiki command directory
Open the Emacs Wiki page @var{wiki} by name.
If @var{command} is non-nil, it is the function used to visit the file.
If @var{directory} is non-nil, it is the directory in which the Wiki page
will be created if it does not already exist.
@end defun

@defun emacs-wiki-next-reference
Move forward to next Wiki link or URL, cycling if necessary.
@end defun

@defun emacs-wiki-previous-reference
Move backward to the next Wiki link or URL, cycling if necessary.
This function is not entirely accurate, but it's close enough.
@end defun

@defun emacs-wiki-refresh-buffers &rest args
Rebuild file alist and refresh current project.
Call after creating a page.
@end defun

@defun emacs-wiki-follow-name-at-point other-window
Visit the link at point, or insert a newline if none.
@end defun

@defun emacs-wiki-follow-name-at-point-other-window
Visit the link at point in other window.
@end defun

@defun emacs-wiki-follow-name-at-mouse event other-window
Visit the link at point, or yank text if none.
@end defun

@defun emacs-wiki-follow-name-at-mouse-other-window event
Visit the link at point.
@end defun

@defun emacs-wiki-rename-link-at-point
Rename the link under point, and the location it points to. This does not
work with URLs, and will preserve a description in an extended link.
@end defun

@defun emacs-wiki-delete-link-at-point
Delete the link under point, and the location it points to. This does not
work with URLs.
@end defun

@defun emacs-wiki-search text
Search for the given @var{text} string in the Wiki directories.
@end defun

@defun emacs-wiki-backlink
Grep for the current page name in all the Wiki directories.
@end defun

@defun emacs-wiki-index
Display an index of all known Wiki pages.
@end defun

@defun emacs-wiki-highlight-buffer
Re-highlight the entire Wiki buffer.
@end defun

@defun emacs-wiki-visit-published-file arg
Visit the current Wiki page's published result.
@end defun

@defun emacs-wiki-dired-publish
Publish all marked files in a dired buffer.
@end defun

@defun emacs-wiki-publish-index
Publish an index of the Wiki pages.
This function can be added to @code{emacs-wiki-after-wiki-publish-hook}.
@end defun

@defun emacs-wiki-publish arg
Publish all Wikis that need publishing.
If the published Wiki already exists, it is only overwritten if the
Wiki is newer than the published copy.  When given the optional
argument @var{arg}, all Wikis are rewritten, no matter how recent they are.
The index file is rewritten no matter what.
@end defun

@defun emacs-wiki-publish-this-page
Force publication of the current page.
@end defun

@defun emacs-wiki-change-project project
Change Wiki projects.

When called interactively, load the welcome page of the selected
project in a new buffer. If no project is selected, the default
project as specified in @code{emacs-wiki-default-project} will be used.

Note that the project will only be changed if the welcome page
exists for the target project. This may be changed in the future
to find a nonexistent file, though if this happens it is not
clear which of Wiki directory should be used in the case of there
being multiple directories.

When called from a Lisp program, update the current buffer's
project to @var{project}.
@end defun

@node Convenience Features, Tables, Interactive Functions, Top
@comment  node-name,  next,  previous,  up
@chapter Convenience Features
@cindex pcomplete
@cindex ChangeLog

The following are several miscellaneous features that might make your
emacs-wiki experience more enjoyable.

@strong{Using pcomplete}

If you have pcomplete loaded, you can type @kbd{M-TAB} to complete
Wiki names.  Hitting @kbd{M-TAB} two or more times in succession will
cycle through all of the possibilities.  You can find
@file{pcomplete.el} in the @file{contrib} directory that comes with
the emacs-wiki tarball.

@strong{ChangeLog}

If you use a ChangeLog (@kbd{C-x 4 a}) within one of your Wiki
directories, it will be used for notifying visitors to your Wiki of
recent changes.

@strong{Macros}

Macros can be defined for text that you use often.  Consult
@file{emacs-wiki-macros.el} for information on using this feature.

@strong{Menu}

This feature allows you to make custom and auto-generated navigation
menus.  Please consult the top of the @file{emacs-wiki-menu.el} for
reasonably complete documentation.

@node Tables, Multiple Projects, Convenience Features, Top
@comment  node-name,  next,  previous,  up
@chapter Fancy Tables
@cindex @file{emacs-wiki-table.el}, using
@cindex tables
@cindex markup, fancy tables

To get fancy table markup, add:

@example
(require 'emacs-wiki-table)
@end example

to your @file{.emacs}. In your wiki source files, you can now
make tables that look like this:

@example

 +------------------------------------------------------------------+
 |                    A table header                                |
 +-------------------------------+----------------------------------+
 |           Column 1            |           Column 2               |
 +-------------------------------+----------------------------------+
 |Some text here                 |More text here, even wrapping to  |
 |                               |the next line                     |
 +-------------------------------+----------------------------------+
 |Some text here                 |More text here, even wrapping to  |
 |                               |the next line                     |
 +-------------------------------+----------------------------------+

@end example

See @file{table.el} for more information.

@file{emacs-wiki-table.el} does not add any interactive functions or
keybindings.

@node Multiple Projects, Encryption, Tables, Top
@comment  node-name,  next,  previous,  up
@chapter Multiple Projects
@cindex @file{emacs-wiki-project.el}, using
@cindex multiple projects
@cindex interwiki links

Emacs-wiki has a way of supporting multiple Wiki projects.  This
allows you to make links from one project to another, which are often
called @dfn{interwiki links}.  This can be convenient if you wish to
split your website according to the kind of content, for example.

For now, it is considered good practice to have your multiple projects
under a common directory, and not to nest your projects.

You will need something like the following in your @file{.emacs} file
in order to set up multiple project support.

@lisp
(setq emacs-wiki-projects
      `(("WebWiki" .
         ((emacs-wiki-directories . ("~/proj/wiki/webpage"))
          (emacs-wiki-project-server-prefix . "../wiki/")
          (emacs-wiki-publishing-directory
           . "~/personal-site/site/wiki")))
        ("ProjectsWiki" .
         ((emacs-wiki-directories . ("~/proj/wiki/projects"))
          (emacs-wiki-project-server-prefix . "../projects/")
          (emacs-wiki-publishing-directory
           . "~/personal-site/site/projects")))))
@end lisp

The first phrase on the second line of code is the name of the
project.  In this example, there are two projects, WebWiki and
ProjectsWiki.  It would be best for these names to be in @ref{Wiki
Concepts, mixed case}.

The @dfn{emacs-wiki-directories} line indicates which source
directories correspond with the particular project.  This must be a
list.

@dfn{emacs-wiki-project-server-prefix} is the text that will be put at
the beginning of each interwiki link at publish time.  For example,
@samp{WebWiki#MyPage} would be rendered @samp{../wiki/MyPage.html} in
its published (HTML) form.  It is also acceptable to give an absolute
location here, like @samp{/projects}, with the root directory
corresponding to your root web publishing directory.

@dfn{emacs-wiki-publishing-directory} is the directory where the HTML
content will be placed upon publishing the project.  You should make
sure that the content of @code{emacs-wiki-project-server-prefix} is
such that a link from a file in one project to a file in another
project is feasible.

Other variables can also be defined in this block if you wish to
customize a particular project further.

@node Encryption, Getting Help and Reporting Bugs, Multiple Projects, Top
@comment  node-name,  next,  previous,  up
@chapter Encryption
@cindex @file{emacs-wiki-pgg.el}, using
@cindex PGG, integrating with emacs-wiki
@cindex encryption

To get PGG@footnote{@inforef{Overview,,pgg}.}  support within Emacs
Wiki, add

@example
(require 'emacs-wiki-pgg)
@end example

to your @file{.emacs}. In your wiki source files, you can now
have sections of text that is automatically encrypted when published
or sections that can be decrypted/encrypted interactively.

@menu
* Interface to PGG::    Personalize PGG encrypt/decrypt functions
* gpg Tag::             Interactively encrypt/decrypt text
* gpge Tag::            Automatically encrypt text on publish
@end menu

@node Interface to PGG, gpg Tag, Encryption, Encryption
@comment  node-name,  next,  previous,  up
@section Interface to PGG
@cindex pgg-encrypt-show
@cindex pgg-encrypt-self-sign
@cindex emacs-wiki-pgg-interface
@cindex emacs-wiki-pgg-interface-sign

Make sure to set @var{pgg-gpg-user-id} to your user id. Eg:

@example
(setq pgg-gpg-user-id "Your user id")
@end example

There are two interfaces to PGG. This can be controlled via setting
the variable @var{emacs-wiki-pgg-interface} to the correct function:

@defvar emacs-wiki-pgg-interface

@table @asis

@item 'pgg-encrypt-show
@code{pgg-encrypt-region}@footnote{A function defined by PGG} is
called interactively after setting point and mark. Recipients are read
from the minibuffer.

@item 'pgg-encrypt-sign-self
This is a personalized version of @code{pgg-encrypt-region} that is
intended when the recipient is self. Message is signed if
@var{emacs-wiki-pgg-sign} is non-nil. You are welcome to change
@code{pgg-encrypt-sign-self} in @file{emacs-wiki-pgg.el} to suit your
needs.

@end table

@end defvar

@defvar emacs-wiki-pgg-sign

Set to non-nil if you want the message to be
signed when the interface is @code{pgg-encrypt-sign-self}.

@end defvar

@node gpg Tag, gpge Tag, Interface to PGG, Encryption
@comment  node-name,  next,  previous,  up
@section gpg Tag
@cindex gpg tag

Enclose text that you want to encrypt/decrypt interactively in
Emacs Wiki mode within these tags. Whitespace is preserved during
publish via the <pre> tag.

@table @kbd

@item M-x emacs-wiki-encrypt-gpg
Finds each gpg tag and encrypts the text between them using the chosen
PGG interface @pxref{Interface to PGG}. The resultant encrypted text is
immediately visible in the buffer.

@item M-x emacs-wiki-decrypt-gpg
Finds each gpg tag and decrypts the text between them. The resultant
decrypted text is immediately visible in the buffer.

@item C-u M-x emacs-wiki-encrypt-gpg
Encrypts the entire buffer using the chosen PGG interface. The
resultant encrypted text is immediately visible in the buffer. The
resultant wiki file is unsuitable for publishing. Use this with care.

@item C-u M-x emacs-wiki-decrypt-gpg
Decrypts the entire buffer. The resultant decrypted text is
immediately visible.

@item C-c C-S-e
Calls @code{emacs-wiki-encrypt-gpg}.

@item C-c C-S-d
Calls @code{emacs-wiki-decrypt-gpg}.

@end table

Example: Consider the following wiki markup

@example
<gpg>Test data</gpg>
@end example

Press C-c C-S-e to get:

@example
<gpg>-----BEGIN PGP MESSAGE-----
Version: GnuPG v1.2.4 (GNU/Linux)

[Imagine encrypted text]

-----END PGP MESSAGE-----
</gpg>
@end example

Now press C-c C-S-d to get:

@example
<gpg>Test data</gpg>
@end example

@node gpge Tag,  , gpg Tag, Encryption
@comment  node-name,  next,  previous,  up
@section gpge Tag
@cindex gpge tag

Enclose unencrypted text within these tags and only its encrypted
version will be published to the html file. This is useful when you
need to maintain an unencrypted cleartext version in your local wiki
source and publish it's encrypted counterpart to your web site.

Example:

@example
<gpge>Test data</gpge>
@end example

Resultant html file section:

@example
<pre class="example">-----BEGIN PGP MESSAGE-----
Version: GnuPG v1.2.4 (GNU/Linux)

[Imagine encrypted text]

-----END PGP MESSAGE-----
</pre>
@end example

@node Getting Help and Reporting Bugs, Contributors, Encryption, Top
@comment  node-name,  next,  previous,  up
@chapter Getting Help and Reporting Bugs
@cindex help, getting
@cindex bugs, reporting

After you have read this guide, if you still have questions about
EmacsWikiMode, or if you have bugs to report, there are several places
you can go.

@uref{http://www.mwolson.org/projects/EmacsWiki.html} is the page that
Michael Olson made for emacs-wiki.  For the duration of his
maintainership, it may be considered the official emacs-wiki website.

You can join the mailing list at
@email{emacs-wiki-discuss@@nongnu.org} using the subscription form at
@uref{http://mail.nongnu.org/mailman/listinfo/
emacs-wiki-discuss}. This mailing list is also available via Gmane
(@uref{http://gmane.org/}). The group is called
@samp{gmane.emacs.wiki.general}.

@uref{http://www.emacswiki.org/cgi-bin/wiki/EmacsWikiMode} is the
emacswiki.org page, and anyone may add tips and hints to it.

You can visit the IRC Freenode channel @samp{#emacs}. Many of the
contributors are frequently around and willing to answer your
questions.

You can also contact the maintainer of EmacsWikiMode, Michael Olson,
at @email{mwolson@@gnu.org}.

@node Contributors, GNU General Public License, Getting Help and Reporting Bugs, Top
@comment  node-name,  next,  previous,  up
@chapter Contributors
@cindex contributors

@example
Copyright @copyright{} 2001, 2002, 2003, 2004 John Wiegley
Copyright @copyright{} 2004 John Sullivan
Copyright @copyright{} 2004 Damien Elmes
Copyright @copyright{} 2004 Sacha Chua
Copyright @copyright{} 2004, 2005 Michael Olson
Copyright @copyright{} 2004 Anirudh Sasikumar
Copyright @copyright{} 2005 Yu Li
@end example

The first draft of this document was made by John Sullivan, and he did
a majority of the work on it.  Parts of this document were taken from
the emacs-wiki.el source code, so a copyright notice for John Wiegley
was added.

While Sacha Chua maintained emacs-wiki, she worked quite a bit on this
document and split off the Planner and Remember sections.

Michael Olson added several sections, like the one on @ref{Multiple
Projects}.  He also reworked some sections in various ways.

Anirudh Sasikumar contributed documentation for the @ref{Encryption}
node.  Many thanks to him for implementing this useful feature and
documenting it!

@node GNU General Public License, Concept Index, Contributors, Top
@comment  node-name,  next,  previous,  up
@appendix GNU GENERAL PUBLIC LICENSE
@center Version 2, June 1991
@cindex GPL
@cindex GNU General Public License

@c This file is intended to be included in another file.

@display
Copyright @copyright{} 1989, 1991 Free Software Foundation, Inc.
51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.

Everyone is permitted to copy and distribute verbatim copies
of this license document, but changing it is not allowed.
@end display

@appendixsec Preamble

  The licenses for most software are designed to take away your
freedom to share and change it.  By contrast, the GNU General Public
License is intended to guarantee your freedom to share and change free
software---to make sure the software is free for all its users.  This
General Public License applies to most of the Free Software
Foundation's software and to any other program whose authors commit to
using it.  (Some other Free Software Foundation software is covered by
the GNU Library General Public License instead.)  You can apply it to
your programs, too.

  When we speak of free software, we are referring to freedom, not
price.  Our General Public Licenses are designed to make sure that you
have the freedom to distribute copies of free software (and charge for
this service if you wish), that you receive source code or can get it
if you want it, that you can change the software or use pieces of it
in new free programs; and that you know you can do these things.

  To protect your rights, we need to make restrictions that forbid
anyone to deny you these rights or to ask you to surrender the rights.
These restrictions translate to certain responsibilities for you if you
distribute copies of the software, or if you modify it.

  For example, if you distribute copies of such a program, whether
gratis or for a fee, you must give the recipients all the rights that
you have.  You must make sure that they, too, receive or can get the
source code.  And you must show them these terms so they know their
rights.

  We protect your rights with two steps: (1) copyright the software, and
(2) offer you this license which gives you legal permission to copy,
distribute and/or modify the software.

  Also, for each author's protection and ours, we want to make certain
that everyone understands that there is no warranty for this free
software.  If the software is modified by someone else and passed on, we
want its recipients to know that what they have is not the original, so
that any problems introduced by others will not reflect on the original
authors' reputations.

  Finally, any free program is threatened constantly by software
patents.  We wish to avoid the danger that redistributors of a free
program will individually obtain patent licenses, in effect making the
program proprietary.  To prevent this, we have made it clear that any
patent must be licensed for everyone's free use or not licensed at all.

  The precise terms and conditions for copying, distribution and
modification follow.

@iftex
@appendixsec TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION
@end iftex
@ifinfo
@center TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION
@end ifinfo

@enumerate 0
@item
This License applies to any program or other work which contains
a notice placed by the copyright holder saying it may be distributed
under the terms of this General Public License.  The ``Program'', below,
refers to any such program or work, and a ``work based on the Program''
means either the Program or any derivative work under copyright law:
that is to say, a work containing the Program or a portion of it,
either verbatim or with modifications and/or translated into another
language.  (Hereinafter, translation is included without limitation in
the term ``modification''.)  Each licensee is addressed as ``you''.

Activities other than copying, distribution and modification are not
covered by this License; they are outside its scope.  The act of
running the Program is not restricted, and the output from the Program
is covered only if its contents constitute a work based on the
Program (independent of having been made by running the Program).
Whether that is true depends on what the Program does.

@item
You may copy and distribute verbatim copies of the Program's
source code as you receive it, in any medium, provided that you
conspicuously and appropriately publish on each copy an appropriate
copyright notice and disclaimer of warranty; keep intact all the
notices that refer to this License and to the absence of any warranty;
and give any other recipients of the Program a copy of this License
along with the Program.

You may charge a fee for the physical act of transferring a copy, and
you may at your option offer warranty protection in exchange for a fee.

@item
You may modify your copy or copies of the Program or any portion
of it, thus forming a work based on the Program, and copy and
distribute such modifications or work under the terms of Section 1
above, provided that you also meet all of these conditions:

@enumerate a
@item
You must cause the modified files to carry prominent notices
stating that you changed the files and the date of any change.

@item
You must cause any work that you distribute or publish, that in
whole or in part contains or is derived from the Program or any
part thereof, to be licensed as a whole at no charge to all third
parties under the terms of this License.

@item
If the modified program normally reads commands interactively
when run, you must cause it, when started running for such
interactive use in the most ordinary way, to print or display an
announcement including an appropriate copyright notice and a
notice that there is no warranty (or else, saying that you provide
a warranty) and that users may redistribute the program under
these conditions, and telling the user how to view a copy of this
License.  (Exception: if the Program itself is interactive but
does not normally print such an announcement, your work based on
the Program is not required to print an announcement.)
@end enumerate

These requirements apply to the modified work as a whole.  If
identifiable sections of that work are not derived from the Program,
and can be reasonably considered independent and separate works in
themselves, then this License, and its terms, do not apply to those
sections when you distribute them as separate works.  But when you
distribute the same sections as part of a whole which is a work based
on the Program, the distribution of the whole must be on the terms of
this License, whose permissions for other licensees extend to the
entire whole, and thus to each and every part regardless of who wrote it.

Thus, it is not the intent of this section to claim rights or contest
your rights to work written entirely by you; rather, the intent is to
exercise the right to control the distribution of derivative or
collective works based on the Program.

In addition, mere aggregation of another work not based on the Program
with the Program (or with a work based on the Program) on a volume of
a storage or distribution medium does not bring the other work under
the scope of this License.

@item
You may copy and distribute the Program (or a work based on it,
under Section 2) in object code or executable form under the terms of
Sections 1 and 2 above provided that you also do one of the following:

@enumerate a
@item
Accompany it with the complete corresponding machine-readable
source code, which must be distributed under the terms of Sections
1 and 2 above on a medium customarily used for software interchange; or,

@item
Accompany it with a written offer, valid for at least three
years, to give any third party, for a charge no more than your
cost of physically performing source distribution, a complete
machine-readable copy of the corresponding source code, to be
distributed under the terms of Sections 1 and 2 above on a medium
customarily used for software interchange; or,

@item
Accompany it with the information you received as to the offer
to distribute corresponding source code.  (This alternative is
allowed only for noncommercial distribution and only if you
received the program in object code or executable form with such
an offer, in accord with Subsection b above.)
@end enumerate

The source code for a work means the preferred form of the work for
making modifications to it.  For an executable work, complete source
code means all the source code for all modules it contains, plus any
associated interface definition files, plus the scripts used to
control compilation and installation of the executable.  However, as a
special exception, the source code distributed need not include
anything that is normally distributed (in either source or binary
form) with the major components (compiler, kernel, and so on) of the
operating system on which the executable runs, unless that component
itself accompanies the executable.

If distribution of executable or object code is made by offering
access to copy from a designated place, then offering equivalent
access to copy the source code from the same place counts as
distribution of the source code, even though third parties are not
compelled to copy the source along with the object code.

@item
You may not copy, modify, sublicense, or distribute the Program
except as expressly provided under this License.  Any attempt
otherwise to copy, modify, sublicense or distribute the Program is
void, and will automatically terminate your rights under this License.
However, parties who have received copies, or rights, from you under
this License will not have their licenses terminated so long as such
parties remain in full compliance.

@item
You are not required to accept this License, since you have not
signed it.  However, nothing else grants you permission to modify or
distribute the Program or its derivative works.  These actions are
prohibited by law if you do not accept this License.  Therefore, by
modifying or distributing the Program (or any work based on the
Program), you indicate your acceptance of this License to do so, and
all its terms and conditions for copying, distributing or modifying
the Program or works based on it.

@item
Each time you redistribute the Program (or any work based on the
Program), the recipient automatically receives a license from the
original licensor to copy, distribute or modify the Program subject to
these terms and conditions.  You may not impose any further
restrictions on the recipients' exercise of the rights granted herein.
You are not responsible for enforcing compliance by third parties to
this License.

@item
If, as a consequence of a court judgment or allegation of patent
infringement or for any other reason (not limited to patent issues),
conditions are imposed on you (whether by court order, agreement or
otherwise) that contradict the conditions of this License, they do not
excuse you from the conditions of this License.  If you cannot
distribute so as to satisfy simultaneously your obligations under this
License and any other pertinent obligations, then as a consequence you
may not distribute the Program at all.  For example, if a patent
license would not permit royalty-free redistribution of the Program by
all those who receive copies directly or indirectly through you, then
the only way you could satisfy both it and this License would be to
refrain entirely from distribution of the Program.

If any portion of this section is held invalid or unenforceable under
any particular circumstance, the balance of the section is intended to
apply and the section as a whole is intended to apply in other
circumstances.

It is not the purpose of this section to induce you to infringe any
patents or other property right claims or to contest validity of any
such claims; this section has the sole purpose of protecting the
integrity of the free software distribution system, which is
implemented by public license practices.  Many people have made
generous contributions to the wide range of software distributed
through that system in reliance on consistent application of that
system; it is up to the author/donor to decide if he or she is willing
to distribute software through any other system and a licensee cannot
impose that choice.

This section is intended to make thoroughly clear what is believed to
be a consequence of the rest of this License.

@item
If the distribution and/or use of the Program is restricted in
certain countries either by patents or by copyrighted interfaces, the
original copyright holder who places the Program under this License
may add an explicit geographical distribution limitation excluding
those countries, so that distribution is permitted only in or among
countries not thus excluded.  In such case, this License incorporates
the limitation as if written in the body of this License.

@item
The Free Software Foundation may publish revised and/or new versions
of the General Public License from time to time.  Such new versions will
be similar in spirit to the present version, but may differ in detail to
address new problems or concerns.

Each version is given a distinguishing version number.  If the Program
specifies a version number of this License which applies to it and ``any
later version'', you have the option of following the terms and conditions
either of that version or of any later version published by the Free
Software Foundation.  If the Program does not specify a version number of
this License, you may choose any version ever published by the Free Software
Foundation.

@item
If you wish to incorporate parts of the Program into other free
programs whose distribution conditions are different, write to the author
to ask for permission.  For software which is copyrighted by the Free
Software Foundation, write to the Free Software Foundation; we sometimes
make exceptions for this.  Our decision will be guided by the two goals
of preserving the free status of all derivatives of our free software and
of promoting the sharing and reuse of software generally.

@iftex
@heading NO WARRANTY
@end iftex
@ifinfo
@center NO WARRANTY
@end ifinfo

@item
BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY
FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN
OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES
PROVIDE THE PROGRAM ``AS IS'' WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED
OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS
TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE
PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,
REPAIR OR CORRECTION.

@item
IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING
WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR
REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,
INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING
OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED
TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY
YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER
PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.
@end enumerate

@iftex
@heading END OF TERMS AND CONDITIONS
@end iftex
@ifinfo
@center END OF TERMS AND CONDITIONS
@end ifinfo

@page
@appendixsec Appendix: How to Apply These Terms to Your New Programs

  If you develop a new program, and you want it to be of the greatest
possible use to the public, the best way to achieve this is to make it
free software which everyone can redistribute and change under these terms.

  To do so, attach the following notices to the program.  It is safest
to attach them to the start of each source file to most effectively
convey the exclusion of warranty; and each file should have at least
the ``copyright'' line and a pointer to where the full notice is found.

@smallexample
@var{one line to give the program's name and a brief idea of what it does.}
Copyright (C) @var{yyyy}  @var{name of author}

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License along
with this program; if not, write to the Free Software Foundation, Inc.,
51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
@end smallexample

Also add information on how to contact you by electronic and paper mail.

If the program is interactive, make it output a short notice like this
when it starts in an interactive mode:

@smallexample
Gnomovision version 69, Copyright (C) 19@var{yy} @var{name of author}
Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.
This is free software, and you are welcome to redistribute it
under certain conditions; type `show c' for details.
@end smallexample

The hypothetical commands @samp{show w} and @samp{show c} should show
the appropriate parts of the General Public License.  Of course, the
commands you use may be called something other than @samp{show w} and
@samp{show c}; they could even be mouse-clicks or menu items---whatever
suits your program.

You should also get your employer (if you work as a programmer) or your
school, if any, to sign a ``copyright disclaimer'' for the program, if
necessary.  Here is a sample; alter the names:

@example
Yoyodyne, Inc., hereby disclaims all copyright interest in the program
`Gnomovision' (which makes passes at compilers) written by James Hacker.

@var{signature of Ty Coon}, 1 April 1989
Ty Coon, President of Vice
@end example

This General Public License does not permit incorporating your program into
proprietary programs.  If your program is a subroutine library, you may
consider it more useful to permit linking proprietary applications with the
library.  If this is what you want to do, use the GNU Library General
Public License instead of this License.

@node Concept Index,  , GNU General Public License, Top
@comment  node-name,  next,  previous,  up
@unnumbered Index

@printindex cp

@bye
