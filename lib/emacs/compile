#!/usr/bin/perl -w
#
# Possibly the foulest hack I have ever written.
#

use strict;

use FindBin;
use File::Path;

chdir $FindBin::Bin or die "couldn't chdir($FindBin::Bin): $!\n";

my @srcdirs = grep -d, qw(init/common major-modes minor-modes utils fun);
my $lib     = "$ENV{HOME}/lib/emacs";

my @load_paths = map { "$lib/$_" } qw(minor-modes major-modes
                                      major-modes/mmm major-modes/tdtd);

my $GNU_install_dir = "$lib/GNU_Emacs";
my $X_install_dir   = "$lib/XEmacs";

my $ELs = `find @srcdirs -name \\*.el \\
			    ! -name psgml\\* \\
			    ! -name tdtd\\* \\
			    ! -name sdf.el`;
my @ELs = split /\n/, $ELs;
my @ELCs = map { $_ . 'c' } @ELs;

my $emacs = 'emacs';
if ($ARGV[0] && $ARGV[0] =~ /emacs=(.*)/i) {
  $emacs = $1;
  shift;
}

my $version = `$emacs --version`;
$version =~ s/\n.*//s;
my $version_number = ($version =~ /^\s*(GNU |X)Emacs (\d+\.\d+)/) ?
  $2 : die "Couldn't parse version: `$version'\n";

my ($compiler, $installdir);
if ($version =~ /XEmacs/) {
  my $load_paths = join '', map { qq{"$_"} } @load_paths;
  $compiler = qq{$emacs -eval "(setq load-path (append '($load_paths) load-path))"};
  $installdir = "$X_install_dir/$version_number";
}
else {
  $compiler   = "$emacs " . join ' ', map { "-L $_" } @load_paths;
  $installdir = "$GNU_install_dir/$version_number";
}

$compiler .= ' -batch -f batch-byte-compile';

print <<EOF;
Version: $version
Compiler: $compiler
Install dir: $installdir
EOF

my $target = $ARGV[0] || 'install';
$target = 'install' if $target eq 'all';

eval "make_$target";

sub make_list {
  print "$_\n" foreach @ELs;
}

sub make_install {
  make_elcs();
  make_psgml();
#  make_uninstall();
  
  print "Installing all .elcs in $installdir\n";
  -d $installdir or mkpath($installdir, 0, 0755);
  
  foreach my $elc (@ELCs, glob('major-modes/psgml/*.elc')) {
    my $dest = "$installdir/$elc";
    if (-e $dest) {
      print "Overwrite $dest? ";
      next unless <> =~ /y/i;
    }
    copy($elc, $installdir);
  }
}

sub make_elcs {
  foreach my $el (@ELs) {
    make_elc($el);
  }
}

sub make_elc {
  my $el = shift;
  my $elc = $el . 'c';
  return if ! -e $el or -M $el > -M $elc;
  print "Compiling $el ...\n";
  system "$compiler $el";
  die if $?;
}

sub make_clean {
  make_uninstall();
  my @elcs = split /\n/, `find $lib -name \\*.elc`;
  print "Deleting @elcs\n";
  unlink @elcs;
}

sub make_uninstall {
  my @installed = glob("$installdir/*.elc");
  print "Deleting @installed\n";
  unlink @installed;
}

sub make_psgml {
  system('cd major-modes/psgml && make');
}
