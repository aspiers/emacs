#!/bin/bash

. ~/.shared_env # fix PATH since xmacroplay might be in ~/local/bin

me=`basename $0`

if [ -z "$DISPLAY" ]; then
    echo "$me: Need \$DISPLAY set for feed-X11 to work; aborting." >&2
    sleep 1 # ensure we see the message if we're in mutt
    exit 1
fi

# backwards compatibility
if [ "$1" = -l ]; then
    shift
fi

if fast-X11-display; then
    : Assume we already have an emacs running.  We could alternatively
    : use quick-emacs at this point.
    xdotool set_desktop 0 # prefer first desktop
    focus-emacs-frame || exit $?
    echo "`date` $me: `current-window-id` / `current-window-name`" \
        >> ~/.log/switch-feed-emacs.log 2>&1
    feed-X11
else
    : No fast X11 display
    # The bash manual says:
    #
    #   If a command is followed by a & and job control is not active,
    #   the default standard input for the command is the empty file
    #   /dev/null.
    #
    # So we first save the current STDIN which is connected to the
    # output end of the pipe which will receive the key macro to feed
    # to feed-X11.
    exec 3<&0
    ( sleep 2; feed-X11 <&3 ) &

    # For some reason we don't need STDIN to be a tty for
    # interactive emacs to run happily in the foreground?!
    quick-emacs "$@"
fi
